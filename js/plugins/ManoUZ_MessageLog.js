/*:
 * @plugindesc ノベルゲーム向けの機能を提供します
 * @author しぐれん
 * 
 * @target MZ
 * @orderAfter MOG_TitleSplashScreen
 * 
 * @url https://siguren400.booth.pm/items/3300534
 * @command Show
 * @text バックログを開く
 * 
 * @command MakeBookmark
 * @text しおりの設置
 * @desc 次にログを掃除する際にしおり以後のメッセージを残します。
 * 
 * @command ClearAll
 * @text 全てのログをクリアする
 * @desc 保存されているログを全て消します。
 * しおりを無視する点に注意。
 * 
 * @command CleanupOldData
 * @text 古いログの掃除
 * @desc 「しおりの設定」によって設定した場合の削除も、
 * このコマンドを使います。
 * 
 * @command GetLogSize
 * @text 現在のログの大きさを取得
 * @arg variableId
 * @text 結果を書き込むする変数
 * @type variable
 * @default 0
 * 
 * @command SetAutoMode
 * @text オートモードの切り替え
 * @desc イベントコマンドからオート設定のON/OFFを切り替えます。
 * @arg mode
 * @type boolean
 * @default true
 * 
 * 
 * @command HasLastVoice
 * @text 最後に再生した音声の有無を取得
 * @desc 音声再生ボタンが有効かどうかを取得します。
 * @arg switchId
 * @default 0
 * 
 * @command ShowConsloeProxy
 * @text ログ表示用のデータをコンソールに表示
 * 
 * 
 * @param menuCommand
 * @text メニューコマンド
 * @type struct<MultiLangString>
 * @desc メニューにログを開くコマンドを追加します。
 * コマンド名が空欄の場合、追加しません。
 * 
 * @param voice
 * @text ボイス設定
 * @desc 「文章の表示」と「SEの再生」を関連付けます。
 * 合致したファイルを音声として、メッセージログに記録します。
 * @type struct<Voice>
 * @default {"regex":"voice","files":"[]"}
 * 
 * @param buttonSetting
 * @text ボタンの全般設定
 * @type struct<ButtonSetting>
 * @default {"offsetX":"0","offsetY":"0","windowOverlap":"outside","windowStretchY":"0"}
 * 
 * @param backlogButton
 * @text ログ表示ボタン
 * @type struct<Button>
 * @default {"x":"0","y":"0","image":"MessageButton","enabledSwitch":"0","pressedSound":"{\"name\":\"Book1\",\"volume\":\"90\",\"pitch\":\"100\",\"pan\":\"0\"}","hot":"{\"x\":\"0\",\"y\":\"256\",\"width\":\"64\",\"height\":\"64\"}","cold":"{\"x\":\"64\",\"y\":\"256\",\"width\":\"64\",\"height\":\"64\"}"}
 * @parent buttonSetting
 * 
 * @param saveButton
 * @text セーブボタン
 * @type struct<Button>
 * @default {"x":"64","y":"0","image":"MessageButton","enabledSwitch":"0","pressedSound":"{\"name\":\"Book2\",\"volume\":\"90\",\"pitch\":\"100\",\"pan\":\"0\"}","hot":"{\"x\":\"0\",\"y\":\"128\",\"width\":\"64\",\"height\":\"64\"}","cold":"{\"x\":\"64\",\"y\":\"128\",\"width\":\"64\",\"height\":\"64\"}"}
 * @parent buttonSetting
 * 
 * @param loadButton
 * @text ロードボタン
 * @type struct<Button>
 * @default {"x":"128","y":"0","image":"MessageButton","enabledSwitch":"0","pressedSound":"{\"name\":\"Book2\",\"volume\":\"90\",\"pitch\":\"100\",\"pan\":\"0\"}","hot":"{\"x\":\"0\",\"y\":\"192\",\"width\":\"64\",\"height\":\"64\"}","cold":"{\"x\":\"64\",\"y\":\"192\",\"width\":\"64\",\"height\":\"64\"}"}
 * @parent buttonSetting
 * 
 * @param autoButton
 * @text オートボタン
 * @desc オート状態の場合、
 * 解除されるまでボタンが押されている状態の表示になります。
 * @type struct<Button>
 * @default {"x":"196","y":"0","image":"MessageButton","enabledSwitch":"0","pressedSound":"{\"name\":\"Key\",\"volume\":\"90\",\"pitch\":\"100\",\"pan\":\"0\"}","hot":"{\"x\":\"0\",\"y\":\"0\",\"width\":\"64\",\"height\":\"64\"}","cold":"{\"x\":\"64\",\"y\":\"0\",\"width\":\"64\",\"height\":\"64\"}"}
 * @parent buttonSetting
 * 
 * @param voiceRepeatButton
 * @text ボイスリピートボタン
 * @desc 押した場合、最後のボイスをもう一度再生します。
 * @type struct<Button>
 * @default {"x":"256","y":"0","image":"MessageButton","enabledSwitch":"0","pressedSound":"","hot":"{\"x\":\"0\",\"y\":\"320\",\"width\":\"64\",\"height\":\"64\"}","cold":"{\"x\":\"64\",\"y\":\"320\",\"width\":\"64\",\"height\":\"64\"}"}
 * @parent buttonSetting
 * 
 * @param skipBUtton
 * @text 【未実装】スキップボタン
 * @desc イベントを高速でスキップします。
 * @type struct<Button>
 * @default {"x":"272","y":"0","image":"MessageButton","enabledSwitch":"0","pressedSound":"","hot":"{\"x\":\"0\",\"y\":\"320\",\"width\":\"64\",\"height\":\"64\"}","cold":"{\"x\":\"64\",\"y\":\"320\",\"width\":\"64\",\"height\":\"64\"}"}
 * @parent buttonSetting
 * 

 * @param logWriteSwitch
 * @text ログ書き込み有効化スイッチ
 * @desc 指定したスイッチがONの場合のみ、ログを書き込みます。
 * 未指定の場合、常に書き込みます。
 * @type switch
 * @default 0
 * 
 * @param logWriteOnBattle
 * @text 戦闘中のログ書き込み
 * @desc OFFにすると、戦闘中はログの書き込みを行いません。
 * @type boolean
 * @default false
 * 
 * @param logStyle
 * @type struct<LogStyle>
 * @text ログ画面スタイル
 * @desc ログ画面の配置などを設定します。
 * @default {"windowFileName":"Window","background":"","speakerName":"【%1】","choiceFormat":"【%1】：%2","choiceText":"{\"ja_JP\":\"選択肢\",\"en_US\":\"choices\",\"zh_CN\":\"选择\",\"ko_KR\":\"선택\",\"de_DE\":\"Auswahl\",\"fr_FR\":\"Les choix\",\"ru_RU\":\"Выбор\"}","voiceIconIndex":"4"}
 * 
 * @param logSize
 * @text ログの保存個数(仮：今後の更新で仕様変更あり)
 * @desc プラグインコマンド「古いログの消去」を使用した際に、
 * ここで指定した数以下になるように要素を消します。
 * @type number
 * @default 30
 * 
 * 
 * 
 * @help
 * 以下の機能を提供します
 * ■メッセージログの保存・表示
 * ■メッセージログの消去(プラグインコマンド)
 * ■メッセージの途中セーブ・ロード実行
 * ■ボイス記録機能
 * 
 * 「文章の表示」によって表示された文章をログとして記録します。
 * 
 * ■ボタンの割り当てについて
 * メッセージの表示中、
 * 以下のシンボルの入力が行われた場合にシーン切り替えを実行します。
 * 内部判定はlongPressedを使用しているので、長押しが必要です。
 * ・セーブ:pageup
 * ・ロード:pagedown
 * ・ログ　:shift
 * ■ボタン配置について
 * ボタン配置は相対位置で決められています。
 * ボタン領域の四角形は、全てのボタンを収めることができる四角形となります。
 * この四角形の右側がウィンドウの右側と合わさるような位置を基準とします。
 * offsetX,offsetYは、この位置を基準に動かします。
 * 
 * ■途中セーブ機能について
 * メッセージ表示中にセーブ画面を開き、セーブを行えます。
 * トリガーが並列実行のイベントを実行中にセーブを行うと、
 * 不具合が発生することがあります。
 * 
 * ■途中セーブをロードした場合の挙動
 * メッセージを正しく復元するために、イベントの実行状態を巻き戻します。
 * メッセージの文章によって変数などを操作するプラグインと併用すると、
 * 不具合が発生する可能性があります。
 * 
 * ■ログの削除
 * ログを削除するにはプラグインコマンドを使います。
 * ・全てのログをクリアする
 * 保存されているログを全て消します。
 * 
 * ・古いログの掃除
 * ログが規定された数以下になるようにデータを消します。
 * 「しおり」が設定されている場合、しおり以降のデータは残します。
 * 
 * ・データ数が増加した場合の自動消去
 * 基本保存領域(プラグインパラメータで設定)
 * 追加保存領域(50)
 * ログの数＞基本保存領域＋追加保存領域の場合、強制的にログの掃除が実行されます。
 * この際「しおり」による保護を無視します。
 * 
 * ■ボイス記録機能
 * 文章の表示前に「SEの再生」が実行されていると、それをボイスとして記録します。
 * 
 * 効果音が巻き込まれないように、判別方法が用意されています。
 * 効果音はaudio/se/の内部に配置されますが、
 * その中のサブフォルダで登録するかを判定します。
 * ※サブフォルダはツクールMZ ver1.3.1以降の機能です。
 * 対応するのは以下のファイルです。
 * ※以下の設定はパラメータ「ボイスファイル正規表現」が
 * 「voice」の場合の設定方法です。
 * ・フォルダ「audio/se/」内のサブフォルダ「voice」に含まれるファイル
 * ・ファイル名の先頭に「voice」と付くファイル
 * ・専用に登録したファイル(プラグインパラメータ:ボイスファイルリスト参照)
 * 
 * ■メッセージ自動送り
 * 文章の表示が完了した後、一定時間の経過で自動的に次のメッセージを表示します。
 * ボイスがある場合、ボイスの再生完了まで待ちます。
 * 手動でメッセージ送りした場合、ボイスを停止します。
 * 
 * ※現在は自動送りのスピードを変更する機能はありません。後日実装予定。
 * 
 * ■ログ画面の開き方
 * ログ画面はメッセージ表示中に以下の操作を押すと開きます。
 * ・shiftキーを押し続ける
 * ・マウスホイール上
 * ・画面内のボタンを押す
 * これ以外にも、プラグインコマンドで呼び出す方法があります。
 * マップ上で自由に呼び出せるようにしたい場合、
 * コモンイベントを利用してプラグインコマンドを呼び出してください。
 * 
 * ■既知の不具合
 *・長い文章を表示すると重なる
 * １行に収まらない長い文章表示すると、文字が重なります。
 * 対応がとても大変なので、後回しにします。
 * ※対応手段の目途がついたので、いずれ実装。
 * 
 * ・ゲームデータが更新されていても、読み込んだセーブデータに反映されない
 * ツクールの仕様に起因する問題。
 * 対処方法はありますが、とても複雑なので先送りです。
 * 
 * ■更新履歴
 * ver 2.0.0　beta 2022/05/13
 * ログの書き込み方式を変更。
 * これにより制御文字で表示した変数などの文章が固定されるようになりました。
 * イベントテストの際にエラーを起こしていた問題を修正。
 * テキスト自動送り中にゲージを表示する機能を追加。
 * バトル中にログ画面用のボタンが表示される不具合を修正。
 * ※シーン遷移により想定外の動作をすることがあるので封印してます。
 * 指定したスイッチがONの間、ログ関連の操作・ボタンを無効化する機能を追加。
 * 
 * 
 * ver 1.2.0 2021/12/24
 * ロード時のログで文章が重複していたバグを修正。
 * ロード時に文章と関連した最後の音声を再生するように修正。
 * ボタン位置の絶対指定を可能に(ボタン配置)
 * 顔グラフィックのサイズ変更を想定したパラメータの追加(ログ画面スタイル)
 * 
 * ver 1.1.0 2021/12/10
 * ボタン配置を変更可能に。
 * ボタンを押した際の効果音を追加。
 * ボイスリピートボタンを追加。
 * 古いログの掃除機能を追加。
 * 
 * ver 1.0.0 2021/10/08
 * 公開後、安定性が確保できたと判断し正式バージョンへ。
 * ボイスアイコンを名前欄の一部として表示可能に。
 * ボイスアイコンが変更できない不具合を修正。
 * 
 * ver 0.9.3 2021/10/08
 * セーブデータの読み込み部分を改善。
 * ログの読み込みに失敗した場合、ログを初期化しつつエラーを回避するよう修正。
 * メッセージ自動送りを実装。ただし、外部のボイスプラグインとの連携は未実装。
 * ウィンドウの開閉中にボタンを含めた操作を行うと、フリーズするなどの不具合を修正。
 * 
 * ver0.9.1 2021/10/02
 * バグ修正
 * 顔グラ無し・名前有りの組み合わせで、正しく表示されない問題を修正。
 * ボイスありのログに対してアイコンを表示するように修正。
 * スクロール状況によって顔グラフィックが出ないのを修正。
 * メッセージ表示直後に戦闘に突入すると画面が固まる問題を修正。
 * 
 * ■利用規約
 * 1.利用可能なプロジェクト
 * ・ゲームの内容(配布および販売方法・年齢制限の有無など)を問わず、どのようなゲームにでもご利用いただけます。
 * 
 * 2.利用条件
 * ・ゲームの配布(販売を含む)の際に、同梱のテキストなどに本プラグインを利用したことを記載してください。
 * ・複数人のチームによるゲーム作成の場合、参加者の内１名以上が本プラグインを購入している必要があります。
 * ・本プラグインを利用するに際し、利用者は自己の責任に基づいて使用するものとします。
 * ・本プラグインを改変しての利用は可能ですが、その場合は(5)で示すサポートの範囲外とします。
 * 
 * 3.禁止事項
 * ・改変の有無に関わらず本プラグインをゲームの配布(販売を含む)以外の方法で、公開・配布・販売する行為。
 * ・配布(販売含む)されたゲームの中から本プラグイン抜き出して使用する行為。
 * ・このプラグインに記載された利用規約を削除・改変する行為。
 * 
 * 4.免責事項
 * 当方は以下の内容についてその責任を負わないものとします。
 * ・本プラグインの更新によるセーブデータの互換性消失
 * ・セーブデータの破損
 * ・ゲームデータの破損
 * ・他のプラグインとの併用による誤作動・不具合
 * ・その他プラグインの使用によって生じた損害
 * 
 * 5.不具合対応(サポート)
 * ・本プラグインの不具合について可能な限り対応しますが、修正を行うことを保証するものではありません。
 * 
 * 9.利用規約の変更について
 * ・この利用規約は予告なく変更されることがあります。
 * 


*/

/*~struct~PlaySE:
* @param name
* @type file
* @dir audio/se/
* 
* @param volume
* @text 音量
* @desc ボイスファイルの音量
* @default 90
* @min 0
* @max 100
* @type number
*
* @param pitch
* @text ピッチ
* @desc ボイスファイルのピッチ
* @default 100
* @type number
*
* @param pan
* @text 左右バランス
* @desc ボイスファイルの左右バランス
* @default 0
* @min -100
* @max 100
* @type number
 */
/*~struct~Button:
 * 
 * @param x
 * @text X座標(相対位置)
 * @desc 基準位置はボタングループで設定。
 * 状況により基準位置は移動します。
 * @type number
 * @default 0
 * 
 * @param y
 * @text Y座標(相対位置)
 * @desc 基準位置はボタングループで設定。
 * 状況により基準位置は移動します。
 * @type number
 * @default 0
 * 
 * @param image
 * @text ボタン画像
 * @desc 空欄にするとボタンと対応した機能が無効になります。
 * @type file
 * @dir img/system/
 * 
 * @param hot
 * @text 押されている時の画像
 * @type struct<Rect>
 * @desc ボタンがクリックされている間に表示する画像。
 * ボタン画像の一部から、指定範囲を切り出して使います。
 * @default {"x":"0","y":"0","width":"64","height":"64"}
 * 
 * @param cold
 * @text 通常時の画像
 * @type struct<Rect>
 * @desc ボタンがクリックされていない間に表示する画像。
 * ボタン画像の一部から、指定範囲を切り出して使います。
 * @default {"x":"0","y":"0","width":"64","height":"64"}
 * 
 * @param enabledSwitch
 * @text 有効化スイッチ
 * @desc 指定したスイッチがONの場合のみボタンを表示します。
 * ニューゲーム時にONになります。未指定の場合、常に有効化。
 * @type switch
 * @default 0
 * 
 * @param pressedSound
 * @text 押された時の音声
 * @type struct<PlaySE>
 * 
 */
/*~struct~Rect:
 * @param x
 * @type number
 * @min -123456
 * 
 * @param y
 * @type number
 * @min -123456
 * 
 * @param width
 * @type number
 * 
 * @param height
 * @type number
*/
/*~struct~ButtonSetting:
 * @param offsetX
 * @desc ボタンを横方向に移動します。
 * @type number
 * @min -123456
 * @default 0
 * 
 * @param offsetY
 * @desc ボタンを縦方向に移動します。
 * @type number
 * @min -123456
 * @default 0
 * 
 * @param windowOverlap
 * @text ウィンドウとの重なり
 * @type select
 * @option 内側(ウィンドウが少し大きくなります)
 * @value inside
 * @option 外側(必要に応じて選択肢が移動します)
 * @value outside
 * @option 絶対指定(ほぼ左上原点・メッセージが下側の場合のみ表示)
 * @value absolute
 * @default outside
 * 
 * @param windowStretchY
 * @text ウィンドウの伸縮(Y)
 * @desc ボタン設置用のスペースを確保するときに使います。
 * @type number
 * @min -123456
 * @default 0
 * 
 * @param disableSwitch
 * @text 強制ボタン非表示
 * @desc 指定したスイッチがONの間、全てのボタンを無効化します。
 * @type switch
 * @default 0
 * */
/*~struct~LogStyle:
 * 
 * 
 * @param windowRect
 * @text 【仮】ウィンドウ配置
 * @type struct<Rect>
 * 
 *
 * @param windowFileName
 * @type file
 * @text ウィンドウ画像
 * @dir img/system
 * @default Window
 * 
 * @param background
 * @text 背景画像
 * @type file
 * @dir img/system
 * @desc ログシーンの背景に使う画像を設定します。
 * 
 * @param freamColor
 * @text 枠線の色(空欄の場合非表示)
 * @desc 文章の間に入れる区切り線の色を指定します。#00FFFF表記
 * @type string
 * @default #00FFFF
 * 
 * @param speakerName
 * @text 名前表示フォーマット
 * @desc 名前を変換して表示します(%1→名前,%2→ボイスアイコン)
 * @type string
 * @default 【%1】%2
 * 
 * @param choiceFormat
 * @text 選択肢の表示形式
 * @type string
 * @desc %1に「選択肢」、%2に項目の文字列が表示されます。
 * @default 【%1】：%2
 * 
 * @param choiceText
 * @text 選択肢
 * @type struct<MultiLangString>
 * @default {"ja_JP":"選択肢","en_US":"choices","zh_CN":"选择","ko_KR":"선택","de_DE":"Auswahl","fr_FR":"Les choix","ru_RU":"Выбор"}
 * @desc 選択肢の表示名。多言語対応済み。
 * 
 * @param voiceIconIndex
 * @text アイコン番号
 * @desc ログ表示の際に、ボイスがあるログにアイコンを表示します。
 * @type number
 * @default 4
 * 
 * @param faceLines
 * @text 顔グラフィック行数
 * @desc 画像がある場合、何行扱いにするか(顔グラサイズ変更を想定)
 * @type number
 * @default 4
 * 
 * 
*/
//通常効果音をボイス扱いするための機能
/*~struct~Voice:
 * @param regex
 * @text ボイスファイル正規表現
 * @desc  正規表現で合致したファイル名を音声として扱います。
 * 内部的には「"^"+"この文字列"+".+"」で処理しています。
 * @type string
 * @default voice
 * 
 * @param files
 * @text ボイスファイルリスト
 * @type file[]
 * @dir audio/se/
 * @desc 指定したファイルをボイスファイルとして扱います。
 * 正規表現で対応できないファイルを対応させる場合に使います。
 * @default []
 * 
 * 
*/
/*~struct~Auto:
 * @param autoSpeed
 * @type sturct<AutoSpeed>[]
 * @desc メッセージ送りの速度です。
 * ここで設定したリストの中から選びます。
 * 
 * @param optionName
 * @desc コンフィグ画面での表示名です。
 * @type struct<MultiLangString>
 * 
 * @param button
 * @type struct<Button>
 * 
 * 
 * 
*/
/*~struct~AutoSpeed:
 * @param text
 * @text 表示する文字
 * @desc 設定画面に表示するテキスト 
 * @type struct<MultiLangString>
 * 
 * @param speed
 * @text オート速度
 * @desc テキストがすべて描画された後、
 * メッセージ送りをするまでの時間(フレーム数)
 * @type number
 * @default 600
*/
/*~struct~MultiLangString:
 * @param ja_JP
   @text 日本語

   @param en_US
   @text English

   @param zh_CN
   @text 中文(簡体)
   @desc 我不知道繁體中文，所以目​​前不支持。
   繁体については私が知らないので非対応です。

   @param ko_KR
   @text 한국

   @param de_DE
   @text Deutsche(ドイツ語)

   @param fr_FR
   @text français(フランス語)

   @param ru_RU
   @text русский(ロシア語)
*/

const _0x5eb51b = _0xafb6; (function (_0x471021, _0x484c07) { const _0x13eb50 = _0xafb6, _0x12b8a5 = _0x471021(); while (!![]) { try { const _0x34e0b5 = -parseInt(_0x13eb50(0x2da)) / 0x1 + parseInt(_0x13eb50(0x2fe)) / 0x2 * (parseInt(_0x13eb50(0x2f9)) / 0x3) + -parseInt(_0x13eb50(0x23c)) / 0x4 + -parseInt(_0x13eb50(0x296)) / 0x5 * (-parseInt(_0x13eb50(0x1cb)) / 0x6) + parseInt(_0x13eb50(0x2d9)) / 0x7 + -parseInt(_0x13eb50(0x1a4)) / 0x8 * (-parseInt(_0x13eb50(0x35d)) / 0x9) + -parseInt(_0x13eb50(0x199)) / 0xa * (-parseInt(_0x13eb50(0x177)) / 0xb); if (_0x34e0b5 === _0x484c07) break; else _0x12b8a5['push'](_0x12b8a5['shift']()); } catch (_0x2cc2c6) { _0x12b8a5['push'](_0x12b8a5['shift']()); } } }(_0x5fdc, 0xb97d8)); class LogManager_Export { constructor(_0x419b83) { const _0x5a47e0 = _0xafb6; this[_0x5a47e0(0x184)] = _0x419b83, this[_0x5a47e0(0x1fa)](null); } [_0x5eb51b(0x2e2)]() { const _0x21eedb = _0x5eb51b; return this[_0x21eedb(0x184)]['getLogStyleEX2'](); } [_0x5eb51b(0x1fa)](_0x50d1de) { const _0x54a486 = _0x5eb51b; this[_0x54a486(0x19a)] = _0x50d1de; } ['playVoice'](_0x5b9094, _0x2df35c) { const _0x23da22 = _0x5eb51b; this[_0x23da22(0x19a)] && !!_0x2df35c ? this[_0x23da22(0x19a)](_0x5b9094, _0x2df35c) : AudioManager[_0x23da22(0x35a)](_0x5b9094); } [_0x5eb51b(0x33a)]() { const _0x2d1ab9 = _0x5eb51b; return this[_0x2d1ab9(0x184)]['speakerNameFormat'](); } [_0x5eb51b(0x354)]() { const _0x54cbb7 = _0x5eb51b; return this[_0x54cbb7(0x184)][_0x54cbb7(0x1a0)]()[_0x54cbb7(0x158)]; } [_0x5eb51b(0x248)](_0x3d0893) { const _0xa6ed00 = _0x5eb51b; return this[_0xa6ed00(0x184)][_0xa6ed00(0x248)](_0x3d0893); } [_0x5eb51b(0x163)](_0x2dc51b, _0x4ec8ce) { const _0x12d730 = _0x5eb51b; this['_logManager'][_0x12d730(0x163)](_0x2dc51b, _0x4ec8ce); } [_0x5eb51b(0x1dc)]() { const _0x2fe7b8 = _0x5eb51b; return this[_0x2fe7b8(0x1f3)]($gameMap['_interpreter']); } ['_getRunningInterpriterImple'](_0x28ea78) { const _0x1d0c81 = _0x5eb51b, _0x15ba7d = _0x28ea78[_0x1d0c81(0x2d7)]; if (!_0x15ba7d) return _0x28ea78; return this[_0x1d0c81(0x1f3)](_0x15ba7d); } ['setOptionValue'](_0x4d3215) { const _0x4316e5 = _0x5eb51b; this['_logManager'][_0x4316e5(0x150)](_0x4d3215); } [_0x5eb51b(0x1ec)]() { const _0x38da88 = _0x5eb51b; return this[_0x38da88(0x184)][_0x38da88(0x1ec)](); } } class I_EventUniqueId { [_0x5eb51b(0x33c)]() { return null; } } class UZLOG_EventUniqueID extends I_EventUniqueId { constructor(_0x35138e, _0x418f66, _0x584baa) { const _0x3d2bf7 = _0x5eb51b; super(), this[_0x3d2bf7(0x2fd)] = _0x35138e, this[_0x3d2bf7(0x32c)] = _0x418f66, this[_0x3d2bf7(0x18b)] = _0x584baa; } [_0x5eb51b(0x33c)]() { const _0x59d161 = _0x5eb51b; return 'M' + this[_0x59d161(0x2fd)] + 'E' + this[_0x59d161(0x32c)] + 'P' + this[_0x59d161(0x18b)]; } } class UZLOG_MatinakaItem { constructor() { this['setContents'](null); } ['titleName']() { } ['setContents'](_0x1983b6) { const _0x4681ae = _0x5eb51b; this[_0x4681ae(0x161)] = _0x1983b6; } [_0x5eb51b(0x2c2)]() { } } class UZLOG_MatinakaList { constructor() { const _0x23edec = _0x5eb51b; this[_0x23edec(0x1f7)] = []; } [_0x5eb51b(0x2f5)](_0xe2d0ab) { return this['_list'][_0xe2d0ab]; } [_0x5eb51b(0x2c4)]() { const _0x67782b = _0x5eb51b; return this[_0x67782b(0x1f7)][_0x67782b(0x1ff)]; } } class MultiLineItemProxy { constructor(_0x3d054d, _0x48f8b1) { const _0x3c1141 = _0x5eb51b; this[_0x3c1141(0x1b7)] = _0x3d054d, this[_0x3c1141(0x22b)] = _0x48f8b1; } [_0x5eb51b(0x2aa)]() { const _0xacb460 = _0x5eb51b; return this[_0xacb460(0x1ab)]() && !!this[_0xacb460(0x18e)](); } [_0x5eb51b(0x2a2)]() { const _0x301909 = _0x5eb51b; return this[_0x301909(0x1b7)][_0x301909(0x2a2)](); } [_0x5eb51b(0x22a)]() { const _0x2bab3d = _0x5eb51b; return this[_0x2bab3d(0x1b7)]['hasFace'](); } [_0x5eb51b(0x2bf)]() { const _0x1bbbf3 = _0x5eb51b; return this[_0x1bbbf3(0x1b7)]['faceName'](); } ['faceIndex']() { const _0x375f3e = _0x5eb51b; return this['_item'][_0x375f3e(0x22c)](); } [_0x5eb51b(0x1ab)]() { const _0x149647 = _0x5eb51b; return this[_0x149647(0x22b)] === 0x0; } ['isBottomItem']() { return ![]; } ['item']() { return this['_item']; } ['numItemLines']() { const _0x148049 = _0x5eb51b; return this[_0x148049(0x1b7)][_0x148049(0x2e3)](); } [_0x5eb51b(0x24f)]() { const _0x48bedc = _0x5eb51b; return this[_0x48bedc(0x22b)]; } [_0x5eb51b(0x18e)]() { const _0x5b869b = _0x5eb51b; if (this[_0x5b869b(0x1b7)]) return this[_0x5b869b(0x1b7)][_0x5b869b(0x18e)](); return null; } [_0x5eb51b(0x357)]() { const _0x26c6b1 = _0x5eb51b; return this['_item'][_0x26c6b1(0x357)](this[_0x26c6b1(0x22b)]); } } class I_LogItem { ['onSaveLoaded']() { } [_0x5eb51b(0x321)]() { return []; } [_0x5eb51b(0x18e)]() { return null; } ['hasVoice']() { const _0xcb542 = _0x5eb51b; return !!this[_0xcb542(0x18e)](); } } function _0x5fdc() { const _0x4f7649 = ['clone', '161982xBaiwT', 'src', 'calcRectHeight', 'setBattleMode', 'beginFill', 'updateHelp', 'quickSaveFileName', '_behavior', 'updateAutoTime', 'autoTime', 'プラグインファイルの名前を変更してはいけません<br>', 'ko_KR', 'UZMSGLOG_CONFIG', '_disableSwitch', 'updateInput', 'bottomLineIndex', '_menuCommand', 'getRunningInterpriter', 'onAudioLoadError', 'setFaceImage', 'Unknow\x20RPG\x20MAKER:', '_overlapType', 'onBoot', 'filter', 'setScrollIndex', 'flipAutoMode', 'repeatLastVoice', 'buttonSetting', 'setColdFrame', 'onBacklogCancel', 'saveContents', 'playClickSound', 'menuCommand', 'cloneOptionValue', 'openness', 'logButtonAreaHeight', 'call', '_onOff', 'mode', 'line', '_getRunningInterpriterImple', 'onBacklogOk', 'logLimitBasic', 'setLocal', '_list', 'numFaceLines', 'hasLastVoice', 'setPlayVoiceFunction', '_voiceList', 'createMinimize', 'readOnryData', 'registerCommandMZ', 'length', 'isTriggered', 'createHelpWindow', 'setSE', 'getContents', 'inside', 'setText', 'lineStyle', 'clear', 'movementAmountOfChoice', '_seBuffer', 'regex', 'label', 'layout', 'speakerNameFormatHasVoiceIcon', 'playBuzzerSound', 'setParallelMode', '_readOnlyData', 'itemRectForText', '_voiceIconInName', 'setupNewGame', 'open', 'mainAreaHeight', 'setValue', 'smoothSelect', 'onEndOfText', 'onEndEvent', 'selectlLastItem', 'name', '_map', 'faceHeight', '_switchId', 'isButtonDisabled', 'makeItemList', 'logWindowRect', 'terminate', 'hotFrame', '_hovered', 'drawItemBackground', '_auto', 'symbol', 'faceLines', 'drawFace', 'hasFace', '_line', 'faceIndex', 'choicePositionType', 'createSpeakerName', 'createOutside', 'ManoUZ_MessageLog', 'resetTemporaly', '_vex', 'Container', 'windowOverlap', '_optionV3', 'backgroundRect', 'speakrName', '_parallelInputLock', 'isInside', 'setBookmark', 'needsDrawBackground', '3460392VjRUEw', 'bookmarkedLogSize', 'onSaveLoaded', '_logButtonGroop', 'add', '_interpreter', 'valueRate', '_hotFrame', 'windowskin', 'createAllWindows', 'drawVoiceIcon', 'backgroundBitmap', 'createChoiceItemText', 'prototype', 'callMZ', '_behaviorList', '_lastValue', '_errorFiles', '\x0ascroll:', 'lineIndex', 'bottomItemIndex', 'match', 'contentsHeight', '_faceindex', 'registerCommand', 'windowRect', 'windowFileName', 'endAutoTimer', '_localBoundsRect', 'isRepeated', '_positionType', 'command250', 'makeBookmark', 'isInputEnabled', '_coldFrame', 'needsTextTerminate', 'lineHeight', 'onEndAllEvent', 'logquicksave', '_faceIndex', 'maxValue', 'loadWindowskin', 'logSize', 'drawIcon', 'cold', 'messageLog', 'refreshLang', 'Do\x20not\x20rename\x20the\x20plugin\x20file.<br>', 'setWorkaround', 'logSizeLimitRed', 'isEnabled', 'initialize', '_voiceReg', 'onNewGame', 'then', 'setEventUniqueId', '_helpWindow', 'loadSystem', '_style', 'optionNormalize', '_gauge', 'en_US', 'isAbsolute', 'redraw', 'onAddItem', 'needsShowFast', 'numLines', 'setTextV8', 'timeRate', '_bookmarkIndex', '_defaultOption', 'event', 'isMVcommandEnabeled', 'saveButton', 'slice', 'itemPadding', 'log', 'windowMessageInit', '_speed', 'callOkHandler', 'resetTimer', 'map', '_ex2', 'true', 'ex2', 'windowSkinBitmap', '_eventUniqueId', 'startAutoTimer', 'pan', '本来のファイル名:\x20', '110hyyeFv', 'createSprite', 'onEnedOfText', 'pressedSound', 'isTextAutoMode', 'Current\x20file\x20name:\x20', 'value', 'setTextV7', 'createDisplayObjects', '_windowStretchY', 'de_DE', 'onMapEventStarted', 'hasName', 'createBackground', 'hasVoice', 'maxPageRows', 'logSizeYellow', 'createLogWindow', 'time', 'createLogButtonSprites', 'needsVoiceIconRender', 'addOriginalCommands', '_enabled', 'itemFrameColor', 'setTexts', 'update', 'setLastVoiceBuffer', 'some', 'createButtonSprite', 'loadButton', 'needsHelpWindow', 'startMessage', '_nameBoxWindow', 'isPressed', 'isNumberInput', 'getLastSeBuffer', 'logManager', 'setLastCodeIndex', 'fillRect', 'addWindow', 'isCurrentItemEnabled', 'faceName', 'option', 'right', 'contents', 'commandName', 'maxItems', 'setJumpTarget', 'lastVoice', 'setShowFast', 'ja_JP', 'setMatinaka', '_workaround', 'isRunning', 'isPlaying', 'setContents', 'setList', 'lastItem', '_func', '_battleMode', 'setHandler', 'choiceFormat', 'enabledSwitch', '_scrollY', 'isNaN', '_childInterpreter', '_needsShowFast', '5925402ovcrao', '1306135pfpyty', 'callMV', 'currentLocal', 'makeStateText', 'onVoiceStop', 'has', 'logSizeLimitYellow', 'isLogSaveEnabled', 'getStyle', 'calculateLines', 'createOnOffButtonSprite', 'playOkSound', 'setHotFrame', '_logWriiteSwitch', '<br>', 'updateAutoTimer', 'isButtonHot', 'clearTextItem', 'cancel', 'isLocal', 'isVoiceStoped', 'setLogList', 'topItemIndex', 'autoSpeed', '_frameColor', 'command101', 'Original\x20file\x20name:\x20', 'itemAt', '_pitch', 'extractSaveContents', 'clearBookmark', '811671FwnUUZ', '_offsetY', 'addChild', '_paramNames', '_mapId', '2zJJNGb', 'isAutoMode', '_choiceText', 'setTextTerminate', 'drawTextEx', 'updateFrame', 'drawItemFrame', 'goto', 'cursorDown', 'visible', 'SetAutoMode', '_messageStream', 'pushScene', 'setFrame', 'max', 'boxWidth', '_texts', 'processTouch', 'logLimitExtends', 'isLogWriteEnabled', 'defaultQuickSaveFileName', 'background', 'voice', '_buttonsSprites', 'createGameObjects', 'itemFrameThickness', 'currentValue', 'windowStretchY', 'isBeingTouched', 'lastItemIndex', 'buttonBehavior', 'terminateMessage', '_autoSpeedList', 'calcSize', 'isSceneChanging', 'createProxy', 'parse', 'getCurrentText', 'autoStateRate', 'canSave', '_table', '_messageWindow', 'min', '_facename', 'voiceRepeatButton', 'nextBottomIndex', '_eventId', 'bottom', 'isButtonOn', '_numLines', '_showFast', 'isBattleMode', 'backlogButton', 'clearOldData', 'convertEscapeCharacters', 'nextTopIndex', 'play', 'parent', '_voice', '_textState', 'speakerNameFormat', 'cloneValue', 'uniqueId', 'close', 'height', 'abs', 'ru_RU', 'getLogItem', '_height', 'playVoice', 'writeMessage', 'onEventStackEmpty', '_choiceFormat', 'HasLastVoice', 'top', 'callDrawFace', '_commandWindow', 'write', '_pan', 'pagedown', 'changeAutoMode', 'onStartMessage', 'onAutosaveFailure', 'openOptionScene', 'mapId', 'refresh', 'voiceIconIndex', 'logStyle', '_name', 'text', '_value', 'setLastVoice', 'playSe', 'stop', 'getLogSize', '153FHsHJy', 'CleanupOldData', 'table', '_radius', 'isAnyButtonOverlaped', 'makeMZ_arg', 'numItemLines', 'pause', 'round', '_logItem', 'pitch', 'isVoiceFile', 'drawItem', '_seBuffers', 'createCommandWindow', '_background', 'setHelpWindow', '_offsetX', 'coldFrame', '_layout', 'index', 'setOptionValue', 'auto', 'getWorkaround', 'reset', '_backgroundSprite', 'files', 'initSwitchs', 'faceRect', 'voiceIcon', 'pageup', 'quickLoad', 'createSpriteList', '_windowFileName', 'error', 'list', 'switchId', 'UZMSGLOG', '_logList', 'isOpen', 'setLastVoiceParam', 'rowSpacing', '_pluginName', '_hasName', 'itemRect', '_matinaka', 'GetLogSize', '_speakerName', 'format', 'readSaveContents', 'zh_CN', '_currnet', 'registerCommandMV', 'start', 'create', 'currentItem', 'iconWidth', 'tryReadingSaveContents', '_logWindow', 'helpAreaHeight', '2365ERKKZj', '_text', '_volume', 'ClearAll', 'activate', '_se', 'updatePlacement', '_textTerminate', 'stopVoice', 'choiceText', 'volume', '_pressed', 'makeSaveContents', '_logManager', 'convertCall', 'colSpacing', 'calcCleanupedSize', 'locale', 'isValid', 'setBehavior', '_pageIndex', 'inBattle', 'saveObject', 'voiceParam', 'forceSelect', 'itemHeight', 'jumpTo', 'needsNextMessage', '_temporaly', 'setAutoMode', '_currentTime', 'test', 'faceWidth', 'addLines', '21360nFJhYb', '_channelFunc', 'correctDataErrors', 'logSizeRed', 'disableSwitch', 'makeData', 'wheelY', 'getLogStyleEX2', 'popScene', 'isLogButtonEnabled', '_logWriteOnBattle', '358016sSSQRj', 'baseRect', 'lineText', 'onClick', 'applyData', '_parallelMode', 'hot', 'isTopItem', '_lastIndex', 'bitmap', 'addItem', '_windowRect', 'isClickEnabled', '_symbol', 'pos', 'offsetY', 'setSpeakerName', 'lastCodeIndex', 'onTerminateMessage', '_item', 'quickSave', 'width', 'push', 'clearLastCodeIndex', '_width', 'Show', '_logStyle', 'left', 'topIndex', '_autoXXX', '現在のファイル名:\x20', 'writeTextV8', 'includes', 'outputHeight', 'set', '_contents', 'RPGMAKER_NAME', 'onChoiceOk']; _0x5fdc = function () { return _0x4f7649; }; return _0x5fdc(); } class LogItem_Base extends I_LogItem { [_0x5eb51b(0x357)](_0x3c5729) { return ''; } [_0x5eb51b(0x27e)]() { return 0x1; } [_0x5eb51b(0x22a)]() { const _0x9d2658 = _0x5eb51b; return !!this[_0x9d2658(0x2bf)](); } [_0x5eb51b(0x2a2)]() { const _0x3d00e7 = _0x5eb51b; return !!this[_0x3d00e7(0x237)](); } [_0x5eb51b(0x237)]() { return ''; } [_0x5eb51b(0x2bf)]() { return ''; } [_0x5eb51b(0x22c)]() { return 0x0; } ['calculateLines']() { const _0x46b54d = _0x5eb51b, _0x486b36 = this['hasName']() ? 0x1 : 0x0, _0x321635 = this[_0x46b54d(0x22a)]() ? ManoUZ_MessageLog[_0x46b54d(0x2e2)]()[_0x46b54d(0x1f8)] : 0x0, _0x4d0ae6 = Math[_0x46b54d(0x30c)](this['numLines']() + _0x486b36, _0x321635); return _0x4d0ae6; } [_0x5eb51b(0x321)]() { const _0x1b804e = _0x5eb51b, _0xf60a3f = [], _0x43506b = this[_0x1b804e(0x2e3)](); for (let _0x542130 = 0x0; _0x542130 < _0x43506b; ++_0x542130) { const _0x37c8ec = new MultiLineItemProxy(this, _0x542130); _0xf60a3f[_0x1b804e(0x1ba)](_0x37c8ec); } return _0xf60a3f; } } class MultiLine_Msg extends LogItem_Base { constructor() { const _0x1c8e97 = _0x5eb51b; super(), this['_text'] = '', this[_0x1c8e97(0x253)] = 0x0, this[_0x1c8e97(0x329)] = null, this['_se'] = null, this['_numLines'] = 0x0, this['_hasName'] = ![]; } [_0x5eb51b(0x2b5)](_0x38d020, _0x8b4ee9, _0xb619df) { const _0x3318b0 = _0x5eb51b; this[_0x3318b0(0x253)] = _0xb619df, this[_0x3318b0(0x329)] = _0x8b4ee9, this['_text'] = _0x38d020; } [_0x5eb51b(0x1c3)](_0x520140) { } [_0x5eb51b(0x34b)](_0x25b6f3, _0x4f80c7, _0x4df099, _0x463181, _0x26542c) { const _0x1cc457 = _0x5eb51b; this[_0x1cc457(0x166)] = !!_0x25b6f3; const _0x2440c2 = _0x25b6f3 ? _0x25b6f3 + '\x0a' + _0x4f80c7 : _0x4f80c7; this[_0x1cc457(0x178)] = _0x2440c2, this[_0x1cc457(0x329)] = _0x4df099, this['_faceindex'] = _0x463181, this[_0x1cc457(0x17c)] = _0x26542c; } [_0x5eb51b(0x198)](_0x545273) { const _0x4a96f0 = _0x5eb51b; this[_0x4a96f0(0x32f)] += _0x545273; } ['text'](_0x4cb28b) { if (_0x4cb28b === 0x0) return this['_text']; return ''; } [_0x5eb51b(0x27e)]() { const _0x1b230c = _0x5eb51b; return this[_0x1b230c(0x32f)]; } ['faceName']() { return this['_facename']; } [_0x5eb51b(0x22c)]() { return this['_faceindex']; } [_0x5eb51b(0x2a2)]() { return this['_hasName']; } ['voiceParam']() { const _0x3aed9f = _0x5eb51b; return this[_0x3aed9f(0x17c)]; } } class MultiLine_Message extends LogItem_Base { constructor() { const _0x5107ff = _0x5eb51b; super(), this[_0x5107ff(0x1de)]('', 0x0), this[_0x5107ff(0x202)](null, null), this[_0x5107ff(0x1b4)](''), this[_0x5107ff(0x2ae)]([]); } [_0x5eb51b(0x202)](_0x361b78, _0x4d7e05) { const _0x31486a = _0x5eb51b; this[_0x31486a(0x17c)] = _0x361b78, this[_0x31486a(0x232)] = _0x4d7e05 || null; } ['voiceParam']() { const _0x2e34bf = _0x5eb51b; return this[_0x2e34bf(0x17c)]; } [_0x5eb51b(0x1de)](_0x4f930e, _0x208faa) { const _0x4cf31c = _0x5eb51b; this['_faceName'] = _0x4f930e, this[_0x4cf31c(0x263)] = _0x208faa; } ['faceIndex']() { const _0x24918e = _0x5eb51b; return this[_0x24918e(0x263)]; } [_0x5eb51b(0x2bf)]() { return this['_faceName']; } [_0x5eb51b(0x237)]() { return this['_speakerName']; } [_0x5eb51b(0x1b4)](_0x53cba7) { const _0x353ad1 = _0x5eb51b; this[_0x353ad1(0x16a)] = _0x53cba7; } [_0x5eb51b(0x2ae)](_0x1bb938) { const _0x28d598 = _0x5eb51b; this[_0x28d598(0x30e)] = _0x1bb938; } ['createSpeakerName']() { const _0x1f09e8 = _0x5eb51b, _0x5d20c6 = ManoUZ_MessageLog[_0x1f09e8(0x2e2)](), _0x5e6a89 = _0x5d20c6[_0x1f09e8(0x33a)], _0x3ce63e = this[_0x1f09e8(0x2a4)]() ? _0x5d20c6[_0x1f09e8(0x158)] : 0x0, _0x39a2c9 = '\x5ci[' + _0x3ce63e + ']'; return _0x5e6a89[_0x1f09e8(0x16b)](this[_0x1f09e8(0x16a)], _0x39a2c9); } [_0x5eb51b(0x357)](_0x4447c9) { const _0x56dc4a = _0x5eb51b; if (this[_0x56dc4a(0x16a)]) { if (_0x4447c9 === 0x0) return this[_0x56dc4a(0x22e)](); return this[_0x56dc4a(0x30e)][_0x4447c9 - 0x1]; } return this[_0x56dc4a(0x30e)][_0x4447c9]; } [_0x5eb51b(0x2a2)]() { const _0x30f88e = _0x5eb51b; return !!this[_0x30f88e(0x16a)]; } [_0x5eb51b(0x27e)]() { const _0x6864d9 = _0x5eb51b; return this[_0x6864d9(0x30e)][_0x6864d9(0x1ff)]; } } class LogItem_Choice extends LogItem_Base { constructor(_0xd69ba7) { const _0xb6d1c2 = _0x5eb51b; super(), this[_0xb6d1c2(0x178)] = _0xd69ba7; } ['text'](_0x36a913) { const _0x5a8aaf = _0x5eb51b; return ManoUZ_MessageLog[_0x5a8aaf(0x248)](this['_text']); } [_0x5eb51b(0x27e)]() { return 0x1; } } class LogList { constructor() { const _0x478d12 = _0x5eb51b; this[_0x478d12(0x207)](); } [_0x5eb51b(0x207)]() { const _0x293bbb = _0x5eb51b; this[_0x293bbb(0x1f7)] = [], this[_0x293bbb(0x2f8)](); } [_0x5eb51b(0x266)]() { const _0x3e0e90 = _0x5eb51b; return this[_0x3e0e90(0x1f7)][_0x3e0e90(0x1ff)]; } [_0x5eb51b(0x23e)]() { } [_0x5eb51b(0x23a)](_0x1e4378) { const _0x4753b1 = _0x5eb51b; this[_0x4753b1(0x281)] = _0x1e4378; } [_0x5eb51b(0x2f8)]() { const _0x14ed32 = _0x5eb51b; this[_0x14ed32(0x23a)](NaN); } [_0x5eb51b(0x25c)]() { const _0x5ea72c = _0x5eb51b; this[_0x5ea72c(0x23a)](this['_list']['length']); } ['bookmarkedLogSize']() { const _0x37cf83 = _0x5eb51b; return this[_0x37cf83(0x1f7)]['length'] - this['_bookmarkIndex']; } [_0x5eb51b(0x333)](_0x23ae22) { const _0x28b804 = _0x5eb51b; if (_0x23ae22 >= this['_list']['length']) return; if (isNaN(_0x23ae22)) return; const _0x28dbca = this[_0x28b804(0x281)] - _0x23ae22, _0x12e2a1 = this[_0x28b804(0x1f7)][_0x28b804(0x1ff)] - _0x23ae22, _0x324cb9 = this[_0x28b804(0x1f7)][_0x28b804(0x1ff)], _0x5129ba = this[_0x28b804(0x1f7)][_0x28b804(0x286)](_0x12e2a1, _0x324cb9); this['_list'] = _0x5129ba, _0x28dbca >= 0x0 ? this[_0x28b804(0x23a)](_0x28dbca) : this['clearBookmark'](); } [_0x5eb51b(0x1fc)]() { const _0x2aaccb = _0x5eb51b, _0x13db4b = this[_0x2aaccb(0x2cf)](), _0x3beea4 = new LogList(); return _0x3beea4[_0x2aaccb(0x240)](_0x13db4b), _0x3beea4; } ['lastItemIndex']() { const _0x289b3d = _0x5eb51b; return this[_0x289b3d(0x1f7)][_0x289b3d(0x1ff)] - 0x1; } ['lastItem']() { const _0x5b4981 = _0x5eb51b;; const _0x1779e6 = this[_0x5b4981(0x31b)](), _0x2a6512 = this[_0x5b4981(0x1f7)][_0x1779e6]; return _0x2a6512 ? _0x2a6512 : null; } ['empty']() { return this['_list']['length'] <= 0x0; } [_0x5eb51b(0x240)](_0x348dd8) { const _0x566f3a = _0x5eb51b; this[_0x566f3a(0x1f7)][_0x566f3a(0x1ba)](_0x348dd8); } [_0x5eb51b(0x321)]() { const _0x4b37d1 = _0x5eb51b, _0x59df27 = []; for (const _0x2f9f4b of this[_0x4b37d1(0x1f7)]) { const _0x19e8c2 = _0x2f9f4b[_0x4b37d1(0x321)](); _0x59df27[_0x4b37d1(0x1ba)](..._0x19e8c2); } return _0x59df27; } } class LogSaveContents { constructor() { const _0x24d4c9 = _0x5eb51b; this['setLogList'](new LogList()), this[_0x24d4c9(0x1bb)](), this[_0x24d4c9(0x2c9)](null); } [_0x5eb51b(0x2c9)](_0x5eebe7) { this['_matinaka'] = _0x5eebe7; } [_0x5eb51b(0x2c5)](_0x33a5d8) { } ['clearOldData'](_0xf512a5) { const _0x26e47c = _0x5eb51b, _0x5ce414 = this['_list'][_0x26e47c(0x23d)](), _0x5ed8f6 = Math[_0x26e47c(0x30c)](_0xf512a5, _0x5ce414); this['_list'][_0x26e47c(0x333)](_0x5ed8f6); } [_0x5eb51b(0x23d)]() { const _0x5326b3 = _0x5eb51b; return this[_0x5326b3(0x1f7)][_0x5326b3(0x23d)](); } [_0x5eb51b(0x25c)]() { this['_list']['makeBookmark'](); } [_0x5eb51b(0x1fc)]() { const _0x5174a6 = _0x5eb51b, _0x5d44b2 = this[_0x5174a6(0x1f7)][_0x5174a6(0x2cf)](), _0x3300f4 = new LogSaveContents(); return _0x5d44b2 && (_0x3300f4[_0x5174a6(0x1ae)](_0x5d44b2), _0x3300f4[_0x5174a6(0x2bb)](this[_0x5174a6(0x1ac)])), _0x3300f4; } [_0x5eb51b(0x2ef)](_0x2ad951) { const _0x3c37ac = _0x5eb51b; _0x2ad951 ? this['_list'] = _0x2ad951 : this[_0x3c37ac(0x1f7)] = new LogList(); } [_0x5eb51b(0x266)]() { const _0x5ce2a3 = _0x5eb51b; return this[_0x5ce2a3(0x1f7)][_0x5ce2a3(0x266)](); } ['setLastCodeIndex'](_0x1d34b1) { const _0x282b63 = _0x5eb51b; this[_0x282b63(0x1ac)] = _0x1d34b1; } [_0x5eb51b(0x261)]() { } [_0x5eb51b(0x219)]() { const _0x4a1b9b = _0x5eb51b; this[_0x4a1b9b(0x1bb)](); } [_0x5eb51b(0x1bb)]() { const _0x45657c = _0x5eb51b; this[_0x45657c(0x2bb)](NaN); } [_0x5eb51b(0x1b5)]() { const _0x8a7822 = _0x5eb51b; return this[_0x8a7822(0x1ac)]; } [_0x5eb51b(0x1ae)](_0x228454) { const _0x2e173c = _0x5eb51b; this[_0x2e173c(0x1f7)][_0x2e173c(0x240)](_0x228454); } [_0x5eb51b(0x321)]() { const _0x23797f = _0x5eb51b; return this['_list'][_0x23797f(0x321)](); } [_0x5eb51b(0x23e)]() { const _0x4802f8 = _0x5eb51b; if (this[_0x4802f8(0x168)]) { } this['_list'][_0x4802f8(0x23e)](); const _0x4e7b84 = ManoUZ_MessageLog['getRunningInterpriter'](); _0x4e7b84 && _0x4e7b84[_0x4802f8(0x2cb)]() && !isNaN(this[_0x4802f8(0x1ac)]) && _0x4e7b84[_0x4802f8(0x191)](this[_0x4802f8(0x1ac)]); } [_0x5eb51b(0x27d)]() { const _0x208ad8 = _0x5eb51b; return this[_0x208ad8(0x1ac)] >= 0x0; } ['lastVoice']() { const _0xc4f509 = _0x5eb51b, _0x4a6c4f = this[_0xc4f509(0x1f7)][_0xc4f509(0x2cf)](); if (_0x4a6c4f) return _0x4a6c4f[_0xc4f509(0x18e)](); return null; } } class I_LogButtonLayout { [_0x5eb51b(0x189)]() { return ![]; } [_0x5eb51b(0x1ea)]() { } ['x']() { return 0x0; } ['y']() { return 0x0; } [_0x5eb51b(0x1b9)]() { return 0x0; } [_0x5eb51b(0x33e)]() { return 0x0; } [_0x5eb51b(0x15f)]() { return 0x0; } ['hotFrame']() { return null; } [_0x5eb51b(0x14d)]() { return null; } [_0x5eb51b(0x1ad)]() { return null; } } class I_ButtonBehavior { ['layout']() { return null; } [_0x5eb51b(0x26e)]() { return ![]; } [_0x5eb51b(0x1a7)]() { } } function _0xafb6(_0x4095cf, _0x380bc7) { const _0x5fdc3d = _0x5fdc(); return _0xafb6 = function (_0xafb67c, _0x40e15a) { _0xafb67c = _0xafb67c - 0x140; let _0x2de57c = _0x5fdc3d[_0xafb67c]; return _0x2de57c; }, _0xafb6(_0x4095cf, _0x380bc7); } var ManoUZ_MessageLog = (function () { 'use strict'; const _0x157443 = _0x5eb51b; class _0x129c99 { [_0x157443(0x18f)](_0x500e1e, _0x1d4ef) { } [_0x157443(0x2b2)](_0x180fd9) { return null; } [_0x157443(0x2e4)](_0x467f14) { return null; } [_0x157443(0x289)](_0x17c175) { } [_0x157443(0x1b8)]() { } [_0x157443(0x15a)]() { } } const _0x54eaab = _0x157443(0x230); function _0x4f3257() { const _0x26be10 = _0x157443, _0x4d6fc4 = decodeURIComponent(document['currentScript'][_0x26be10(0x1cc)])[_0x26be10(0x251)](/([^/]+)\.js$/); if (_0x4d6fc4) return _0x4d6fc4[0x1]; return ''; } function _0x5fd5ed(_0x490fb9) { const _0x52e484 = _0x157443, _0x36c796 = _0x4f3257(); if (_0x490fb9 === _0x36c796) return; const _0x1f8d09 = _0x52e484(0x26b) + (_0x52e484(0x29b) + _0x36c796 + _0x52e484(0x2e8)) + (_0x52e484(0x2f4) + _0x490fb9 + '<br>') + _0x52e484(0x1d5) + (_0x52e484(0x1c2) + _0x36c796 + _0x52e484(0x2e8)) + (_0x52e484(0x295) + _0x490fb9); throw new Error(_0x1f8d09); } _0x5fd5ed(_0x54eaab); class _0x2302ad extends _0x129c99 { ['forceSelect'](_0x3fac7d, _0x2fa2d4) { const _0x5eef58 = _0x157443; _0x3fac7d[_0x5eef58(0x18f)](_0x2fa2d4); } [_0x157443(0x2b2)](_0x1b767c) { return new _0x1be676(_0x1b767c); } [_0x157443(0x2e4)](_0x4e67b1) { return new _0x22ba76(_0x4e67b1); } [_0x157443(0x1b8)]() { const _0x2eb263 = _0x157443, _0x49c122 = _0x441280[_0x2eb263(0x2c0)]()[_0x2eb263(0x1d1)](), _0x3830fe = DataManager[_0x2eb263(0x183)](); return StorageManager[_0x2eb263(0x18d)](_0x49c122, _0x3830fe); } [_0x157443(0x15a)]() { const _0x5df19a = _0x157443, _0x3f02e1 = _0x441280[_0x5df19a(0x2c0)]()[_0x5df19a(0x1d1)](); return StorageManager['loadObject'](_0x3f02e1)[_0x5df19a(0x272)](_0x2227f3 => { const _0x34fa7d = _0x5df19a; return DataManager[_0x34fa7d(0x316)](), DataManager[_0x34fa7d(0x2f7)](_0x2227f3), DataManager[_0x34fa7d(0x19b)](), 0x0; }); } } function _0x13103b(_0x2f961a, _0x3690df, _0x5ae7b7) { const _0x4df764 = _0x157443; if (Utils[_0x4df764(0x1c8)] === 'MZ') { _0x5ae7b7[_0x4df764(0x1ef)](_0x2f961a, _0x3690df); return; } if (Utils['RPGMAKER_NAME'] === 'MV') { _0x5ae7b7[_0x4df764(0x1ef)](_0x2f961a, _0x3690df['x'], _0x3690df['y'], _0x3690df[_0x4df764(0x1b9)], _0x3690df['height']); return; } throw new Error(_0x4df764(0x1df) + Utils['RPGMAKER_NAME']); } class _0x51fc40 { constructor(_0x4ef815, _0x5c2b6c, _0x32ef52, _0xfd4926) { const _0x22bead = _0x157443; this[_0x22bead(0x356)] = _0x4ef815, this[_0x22bead(0x179)] = _0x5c2b6c, this['_pitch'] = _0x32ef52, this[_0x22bead(0x34c)] = _0xfd4926; } static [_0x157443(0x171)](_0x234e2a) { const _0x21a1f0 = _0x157443; if (!_0x234e2a) return null; const _0x302594 = JSON[_0x21a1f0(0x322)](_0x234e2a), _0x2c0597 = _0x302594[_0x21a1f0(0x21b)], _0x553a8c = Number(_0x302594[_0x21a1f0(0x181)]), _0x164c3b = Number(_0x302594[_0x21a1f0(0x145)]), _0x276fbf = Number(_0x302594['pan']); return new _0x51fc40(_0x2c0597, _0x553a8c, _0x164c3b, _0x276fbf); } [_0x157443(0x336)]() { const _0x3a2031 = _0x157443; if (this['_name']) { const _0x20eed0 = { 'pos': 0x0, 'name': this[_0x3a2031(0x356)], 'volume': this[_0x3a2031(0x179)], 'pitch': this[_0x3a2031(0x2f6)], 'pan': this[_0x3a2031(0x34c)] }; AudioManager[_0x3a2031(0x35a)](_0x20eed0); } } } function _0x117494(_0x5213bf) { const _0x60a44a = _0x157443, _0x52b681 = JSON[_0x60a44a(0x322)](_0x5213bf); return new Rectangle(Number(_0x52b681['x']), Number(_0x52b681['y']), Number(_0x52b681['width']), Number(_0x52b681['height'])); } class _0x5b32e8 extends I_LogButtonLayout { constructor(_0x36a704, _0x2a5712, _0x7723df, _0x52ada1, _0x51e4c0, _0x2859d3, _0x293430) { const _0x13bb30 = _0x157443; super(), this[_0x13bb30(0x356)] = _0x36a704, this[_0x13bb30(0x243)] = _0x52ada1, this[_0x13bb30(0x25e)] = _0x51e4c0, this['_x'] = _0x2a5712, this['_y'] = _0x7723df, this[_0x13bb30(0x21e)] = _0x2859d3, this[_0x13bb30(0x17c)] = _0x293430; } static [_0x157443(0x171)](_0x1cad98) { const _0x45dbbf = _0x157443, _0x1e6d52 = JSON[_0x45dbbf(0x322)](_0x1cad98), _0x18ee76 = _0x51fc40[_0x45dbbf(0x171)](_0x1e6d52[_0x45dbbf(0x299)]), _0xb9ae47 = _0x117494(_0x1e6d52[_0x45dbbf(0x1aa)]), _0xa63e6a = _0x117494(_0x1e6d52[_0x45dbbf(0x268)]), _0x5108e5 = Number(_0x1e6d52['x']), _0x1cb4fe = Number(_0x1e6d52['y']), _0x48cc59 = Number(_0x1e6d52[_0x45dbbf(0x2d4)] || 0x0); return new _0x5b32e8(_0x1e6d52['image'], _0x5108e5, _0x1cb4fe, _0xb9ae47, _0xa63e6a, _0x48cc59, _0x18ee76); } [_0x157443(0x189)]() { return !!this['_name']; } [_0x157443(0x15f)]() { const _0x2b4eb5 = _0x157443; return this[_0x2b4eb5(0x21e)]; } [_0x157443(0x1ad)]() { const _0x25e357 = _0x157443; return ImageManager[_0x25e357(0x275)](this['_name']); } [_0x157443(0x1ea)]() { const _0x12c682 = _0x157443; this['_se'] && this['_se'][_0x12c682(0x336)](); } [_0x157443(0x14d)]() { const _0x592c94 = _0x157443; return this['_coldFrame'][_0x592c94(0x1ca)](); } ['hotFrame']() { const _0x4a8d9b = _0x157443; return this[_0x4a8d9b(0x243)][_0x4a8d9b(0x1ca)](); } ['x']() { return this['_x']; } ['y']() { return this['_y']; } ['width']() { const _0x292318 = _0x157443; return Math[_0x292318(0x30c)](this[_0x292318(0x243)][_0x292318(0x1b9)], this[_0x292318(0x25e)][_0x292318(0x1b9)]); } [_0x157443(0x33e)]() { const _0x2762da = _0x157443; return Math['max'](this[_0x2762da(0x243)][_0x2762da(0x33e)], this[_0x2762da(0x25e)][_0x2762da(0x33e)]); } } class _0x4cb6d1 extends I_ButtonBehavior { constructor(_0x18b559, _0x29d9ba) { const _0x3d0ab0 = _0x157443; super(), this[_0x3d0ab0(0x14e)] = _0x18b559, this[_0x3d0ab0(0x1b1)] = _0x29d9ba; } [_0x157443(0x189)]() { const _0x4adfb2 = _0x157443; return this[_0x4adfb2(0x14e)] && this['_layout'][_0x4adfb2(0x189)](); } [_0x157443(0x20c)]() { const _0x585fd2 = _0x157443; return this[_0x585fd2(0x14e)]; } [_0x157443(0x26e)]() { const _0x18baed = _0x157443, _0x3ca67e = this['_layout'][_0x18baed(0x15f)](); if (_0x3ca67e) return $gameSwitches['value'](_0x3ca67e); return !![]; } ['symbol']() { const _0x24689b = _0x157443; return this[_0x24689b(0x1b1)]; } [_0x157443(0x1d9)]() { const _0x2b32c7 = _0x157443; this['isTriggered']() && this[_0x2b32c7(0x1a7)](); } [_0x157443(0x200)]() { const _0x10f0a7 = _0x157443; return Input['isLongPressed'](this[_0x10f0a7(0x227)]()); } [_0x157443(0x28b)]() { } ['onClick']() { const _0x46c169 = _0x157443; this[_0x46c169(0x14e)][_0x46c169(0x1ea)](), this[_0x46c169(0x28b)](); } [_0x157443(0x297)]() { const _0x1221af = _0x157443; return this[_0x1221af(0x2ba)]()[_0x1221af(0x152)]()[_0x1221af(0x2b2)](this); } [_0x157443(0x2ba)]() { return _0x441280; } ['pushScene'](_0x4a6916) { const _0x179424 = _0x157443; this[_0x179424(0x2ba)]()[_0x179424(0x30a)](_0x4a6916); } } class _0x3230b6 extends _0x4cb6d1 { [_0x157443(0x28b)]() { const _0x2b84b1 = _0x157443; this[_0x2b84b1(0x30a)](_0x2f1b25); } [_0x157443(0x200)]() { const _0x3c5378 = _0x157443; return super[_0x3c5378(0x200)]() || TouchInput[_0x3c5378(0x19f)] < 0x0; } } class _0x1b65ca extends _0x4cb6d1 { [_0x157443(0x28b)]() { this['pushScene'](Scene_Load); } } class _0x3f19e3 extends _0x4cb6d1 { [_0x157443(0x26e)]() { const _0x40b9fc = _0x157443; return super[_0x40b9fc(0x26e)]() && this[_0x40b9fc(0x2ba)]()[_0x40b9fc(0x325)](); } [_0x157443(0x28b)]() { const _0x9bfba = _0x157443; this[_0x9bfba(0x30a)](Scene_Save); } } class _0x567a61 extends _0x4cb6d1 { ['isEnabled']() { const _0x77f6e7 = _0x157443; return super['isEnabled']() && this[_0x77f6e7(0x2ba)]()['canSave'](); } [_0x157443(0x28b)]() { const _0x2146b8 = _0x157443; this[_0x2146b8(0x2ba)]()['getWorkaround']()[_0x2146b8(0x1b8)](); } ['onAutoSaveSuccess']() { } [_0x157443(0x350)]() { } } class _0x5ca83d extends _0x4cb6d1 { ['callOkHandler']() { const _0x36b6d3 = _0x157443, _0x3f076e = DataManager['loadGame'](0x0); _0x3f076e && SceneManager[_0x36b6d3(0x305)](Scene_Map); } } class _0x381551 extends _0x4cb6d1 { [_0x157443(0x297)]() { const _0x38e904 = _0x157443; return this['logManager']()[_0x38e904(0x152)]()[_0x38e904(0x2e4)](this); } [_0x157443(0x32e)]() { return ![]; } } class _0x2da1f5 extends _0x381551 { [_0x157443(0x28b)]() { const _0xe069df = _0x157443; this[_0xe069df(0x2ba)]()[_0xe069df(0x34e)](); } [_0x157443(0x32e)]() { const _0x528f34 = _0x157443; return this['logManager']()[_0x528f34(0x29a)](); } [_0x157443(0x297)]() { return new _0x447ace(this); } } class _0x3088ec extends _0x4cb6d1 { [_0x157443(0x28b)]() { const _0x3725fe = _0x157443; this[_0x3725fe(0x2ba)]()[_0x3725fe(0x1e5)](); } [_0x157443(0x26e)]() { const _0x32d472 = _0x157443; return this[_0x32d472(0x2ba)]()[_0x32d472(0x1f9)](); } } class _0x458ff6 extends _0x4cb6d1 { [_0x157443(0x28b)]() { const _0x585ed9 = _0x157443; this[_0x585ed9(0x2ba)]()[_0x585ed9(0x351)](); } } class _0x344d38 { constructor(_0x6a863a, _0x101443, _0x1d2a6d, _0x333b49, _0x2d4814, _0x1a3db6) { const _0x1b43a6 = _0x157443; this[_0x1b43a6(0x1f7)] = _0x6a863a, this['_offsetX'] = _0x101443, this[_0x1b43a6(0x2fa)] = _0x1d2a6d, this[_0x1b43a6(0x1e0)] = _0x333b49, this[_0x1b43a6(0x29f)] = _0x1a3db6, this['_disableSwitch'] = _0x2d4814; } static ['create'](_0x44e177, _0x53263f) { const _0x5b3e53 = _0x157443; if (_0x44e177) { const _0x237c0d = JSON[_0x5b3e53(0x322)](_0x44e177), _0x2217ca = Number(_0x237c0d['offsetX']), _0x4ed9ba = Number(_0x237c0d['offsetY']), _0x47c184 = _0x237c0d[_0x5b3e53(0x234)], _0xe7a6fd = Number(_0x237c0d[_0x5b3e53(0x319)]), _0x17b50b = Number(_0x237c0d[_0x5b3e53(0x19d)] || 0x0); return new _0x344d38(_0x53263f, _0x2217ca, _0x4ed9ba, _0x47c184, _0x17b50b, _0xe7a6fd); } return new _0x344d38(_0x53263f, 0x0, 0x0, 'inside', 0x0, 0x0); } ['isButtonDisabled']() { const _0x10d1df = _0x157443; return $gameSwitches[_0x10d1df(0x29c)](this[_0x10d1df(0x1d8)]); } [_0x157443(0x15b)]() { const _0x63ff36 = _0x157443; return this['_list'][_0x63ff36(0x28d)](_0x3d06e1 => { return _0x3d06e1['createSprite'](); }); } [_0x157443(0x15e)]() { const _0x4c823e = _0x157443; return this[_0x4c823e(0x1f7)]; } [_0x157443(0x156)]() { const _0x98cfe2 = _0x157443; for (const _0x1fdfeb of this[_0x98cfe2(0x1f7)]) { $gameSwitches[_0x98cfe2(0x216)](_0x1fdfeb['layout']()[_0x98cfe2(0x15f)](), !![]); } } [_0x157443(0x1d9)]() { const _0x452098 = _0x157443; for (const _0x2a36fe of this[_0x452098(0x1f7)]) { if (SceneManager[_0x452098(0x320)]()) return; _0x2a36fe[_0x452098(0x1d9)](); } } ['offsetX']() { const _0xa46387 = _0x157443; return this[_0xa46387(0x14c)]; } ['offsetY']() { return this['_offsetY']; } ['isInside']() { const _0x3e52b1 = _0x157443; return this[_0x3e52b1(0x1e0)] === _0x3e52b1(0x204); } ['isAbsolute']() { const _0x53df3c = _0x157443; return this[_0x53df3c(0x1e0)] === 'absolute'; } [_0x157443(0x22f)]() { return new _0x2e23a0(this); } } class _0x26b1dc { constructor(_0x488d58, _0x4290d7) { const _0x9bd8fa = _0x157443; this[_0x9bd8fa(0x270)] = new RegExp('^' + _0x488d58 + '.+'), this[_0x9bd8fa(0x1fb)] = new Set(_0x4290d7); } static [_0x157443(0x171)](_0x56fcdf) { const _0xf251d3 = _0x157443, _0x5c4c84 = JSON[_0xf251d3(0x322)](_0x56fcdf), _0x39384d = _0x5c4c84[_0xf251d3(0x20a)], _0x154b4d = JSON['parse'](_0x5c4c84[_0xf251d3(0x155)]); return new _0x26b1dc(_0x39384d, _0x154b4d); } [_0x157443(0x146)](_0x30dbb8) { const _0x3e0300 = _0x157443; if (this[_0x3e0300(0x270)][_0x3e0300(0x196)](_0x30dbb8)) return !![]; return this[_0x3e0300(0x1fb)][_0x3e0300(0x2df)](_0x30dbb8); } } class _0x2aba06 extends Window_Selectable { [_0x157443(0x26f)](_0x3e5a63) { _0x13103b(this, _0x3e5a63, super['initialize']); } ['numItemLines'](_0x862d41) { return 0x1; } ['lineText'](_0x47a5be) { return ''; } [_0x157443(0x2f0)](_0x4cee22) { return _0x4cee22; } [_0x157443(0x250)](_0x57d01a) { const _0x153687 = _0x157443, _0x2f2160 = this[_0x153687(0x2f0)](_0x57d01a), _0x485643 = this[_0x153687(0x141)](_0x57d01a); return _0x2f2160 + _0x485643 - 0x1; } [_0x157443(0x2dd)]() { const _0x19a19f = _0x157443; return 'index:' + this[_0x19a19f(0x14f)]() + _0x19a19f(0x24e) + this[_0x19a19f(0x2d5)]; } [_0x157443(0x1d0)]() { const _0x258046 = _0x157443; this[_0x258046(0x274)][_0x258046(0x205)](this['makeStateText']()); } ['baseRect'](_0xffbead) { return super['itemRect'](_0xffbead); } ['nextTopIndex']() { const _0x498591 = _0x157443, _0x339e4f = Math[_0x498591(0x30c)](0x0, this[_0x498591(0x14f)]()), _0x40db43 = this['topItemIndex'](_0x339e4f), _0x1af5f8 = this[_0x498591(0x2c4)](), _0x3774a4 = (_0x40db43 + _0x1af5f8 - 0x1) % _0x1af5f8, _0x23c22d = this[_0x498591(0x2f0)](_0x3774a4); if (_0x23c22d > _0x339e4f) return this['bottomItemIndex'](_0x23c22d); return _0x23c22d; } ['cursorUp'](_0xb150be) { const _0x1a2c96 = _0x157443, _0x5d702a = this[_0x1a2c96(0x335)](); this[_0x1a2c96(0x217)](_0x5d702a); } [_0x157443(0x32b)]() { const _0x9fa44f = _0x157443, _0x4d220e = Math[_0x9fa44f(0x30c)](0x0, this[_0x9fa44f(0x14f)]()), _0x3fa612 = this[_0x9fa44f(0x250)](_0x4d220e), _0x15557b = this[_0x9fa44f(0x2c4)](), _0x46d074 = (_0x3fa612 + _0x15557b + 0x1) % _0x15557b, _0x2bab82 = this[_0x9fa44f(0x250)](_0x46d074); if (_0x2bab82 > _0x4d220e) return _0x2bab82; return this[_0x9fa44f(0x2f0)](_0x2bab82); } [_0x157443(0x306)](_0x5f2f0e) { const _0x54ceee = _0x157443, _0x3e7c2f = this[_0x54ceee(0x32b)](); this[_0x54ceee(0x217)](_0x3e7c2f); } ['topLineIndex']() { const _0xaedbb7 = _0x157443; return this[_0xaedbb7(0x1c0)](); } [_0x157443(0x1da)]() { const _0x254494 = _0x157443, _0x1d3612 = this['topIndex'](), _0x57fe08 = this[_0x254494(0x2a5)](); return _0x1d3612 + _0x57fe08; } ['calcRectHeight'](_0x3e2dd6) { const _0x3d7ae4 = _0x157443, _0x426fa1 = this[_0x3d7ae4(0x260)](), _0x394ebd = this[_0x3d7ae4(0x164)]() * 0x2; return (_0x426fa1 + _0x394ebd) * _0x3e2dd6; } [_0x157443(0x167)](_0x1bf36b) { const _0x332490 = _0x157443, _0x34df45 = this['topItemIndex'](_0x1bf36b), _0x166b6f = this[_0x332490(0x1a5)](_0x34df45), _0x164759 = this[_0x332490(0x141)](_0x34df45), _0x1bb64a = this[_0x332490(0x1cd)](_0x164759 - 0x1); return _0x166b6f[_0x332490(0x33e)] += _0x1bb64a, _0x166b6f; } [_0x157443(0x211)](_0x1ccc5c) { const _0x331a20 = _0x157443, _0x3d7233 = this[_0x331a20(0x1a5)](_0x1ccc5c), _0x36b02 = this[_0x331a20(0x287)](); return _0x3d7233['x'] += _0x36b02, _0x3d7233[_0x331a20(0x1b9)] -= _0x36b02 * 0x2, _0x3d7233; } [_0x157443(0x236)]() { } [_0x157443(0x23b)](_0x3500c0) { const _0x1d0588 = _0x157443, _0x193d88 = this[_0x1d0588(0x2f0)](_0x3500c0); return _0x193d88 === _0x3500c0; } [_0x157443(0x225)](_0x3e182e) { const _0x3db516 = _0x157443; this[_0x3db516(0x23b)](_0x3e182e) && super[_0x3db516(0x225)](_0x3e182e); } ['drawItem'](_0x1f74fb) { const _0x1db32e = _0x157443, _0x195982 = this[_0x1db32e(0x1a6)](_0x1f74fb); if (_0x195982) { const _0x465069 = this[_0x1db32e(0x211)](_0x1f74fb); this[_0x1db32e(0x302)](_0x195982, _0x465069['x'], _0x465069['y'], _0x465069[_0x1db32e(0x1b9)]); } } } class _0x333a2a { constructor(_0x34289f, _0x5e158f, _0x26e946, _0x2bf5f8, _0x40072d, _0xaae2db) { const _0x313b29 = _0x157443; this[_0x313b29(0x326)] = { 'ja': _0x34289f, 'en': _0x5e158f, 'zh': _0x26e946, 'ko': _0x2bf5f8, 'de': _0x40072d, 'ru': _0xaae2db }, this[_0x313b29(0x26a)](_0x313b29(0x279)), _0x987db7[_0x313b29(0x240)](this); } static ['create'](_0x2dd8f3) { const _0xb905ce = _0x157443, _0x5983a1 = JSON[_0xb905ce(0x322)](_0x2dd8f3); return new _0x333a2a(_0x5983a1[_0xb905ce(0x2c8)], _0x5983a1['en_US'], _0x5983a1[_0xb905ce(0x16d)], _0x5983a1[_0xb905ce(0x1d6)], _0x5983a1[_0xb905ce(0x2a0)], _0x5983a1[_0xb905ce(0x340)]); } [_0x157443(0x357)]() { const _0x37ae0c = _0x157443; return this[_0x37ae0c(0x16e)]; } [_0x157443(0x323)](_0x468106) { const _0xbdb8d2 = _0x157443; if (_0x468106[_0xbdb8d2(0x251)](/^ja/)) return this[_0xbdb8d2(0x326)]['ja']; if (_0x468106['match'](/^en/)) return this[_0xbdb8d2(0x326)]['en']; if (_0x468106[_0xbdb8d2(0x251)](/^de/)) return this[_0xbdb8d2(0x326)]['de']; if (_0x468106['match'](/^zh/)) return this[_0xbdb8d2(0x326)]['zh']; return this[_0xbdb8d2(0x326)]['en']; } [_0x157443(0x26a)](_0x4ac5ab) { const _0x2c60c8 = _0x157443; this['_currnet'] = this[_0x2c60c8(0x323)](_0x4ac5ab); } } class _0x34d73f { constructor() { const _0x4c676f = _0x157443; this[_0x4c676f(0x1f7)] = []; } [_0x157443(0x2dc)]() { const _0x39bf62 = _0x157443; return $dataSystem[_0x39bf62(0x188)]; } [_0x157443(0x240)](_0x5045d1) { const _0x283216 = _0x157443; this['_list'][_0x283216(0x1ba)](_0x5045d1); } [_0x157443(0x353)]() { const _0x55c6c8 = _0x157443, _0x18b5f2 = this['currentLocal'](); for (const _0x4213d1 of this[_0x55c6c8(0x1f7)]) { _0x4213d1[_0x55c6c8(0x26a)](_0x18b5f2); } } [_0x157443(0x1f6)](_0x4d0ce1) { return; } } const _0x987db7 = new _0x34d73f(); class _0x3190d3 { constructor(_0x1a20f8, _0x5a603c) { const _0x1bd2a2 = _0x157443; this[_0x1bd2a2(0x28a)] = _0x1a20f8, this[_0x1bd2a2(0x178)] = _0x5a603c; } [_0x157443(0x357)]() { const _0x475ef0 = _0x157443; return this[_0x475ef0(0x178)][_0x475ef0(0x357)](); } } class _0x176936 { constructor(_0x1f3a08, _0x4cda4e) { const _0x2fd938 = _0x157443; this[_0x2fd938(0x31e)] = _0x1f3a08; } [_0x157443(0x2a8)]() { return 0x140; } } class _0x5eb7d2 { constructor() { const _0x3bd17d = _0x157443; this[_0x3bd17d(0x207)](), this[_0x3bd17d(0x2ac)] = ![]; } [_0x157443(0x194)](_0x542ebf) { const _0x513fac = _0x157443; this[_0x513fac(0x2ac)] = _0x542ebf; } ['flipAutoMode']() { const _0x39e185 = _0x157443; this[_0x39e185(0x194)](!this[_0x39e185(0x2ac)]); } [_0x157443(0x207)]() { const _0x360d14 = _0x157443; this[_0x360d14(0x2b0)](null), this[_0x360d14(0x28c)](); } ['resetTimer']() { const _0xc71a79 = _0x157443; this[_0xc71a79(0x195)] = 0x0; } ['timerValue']() { return this['_currentTime']; } [_0x157443(0x2ff)]() { const _0x5f148d = _0x157443; return this[_0x5f148d(0x2ac)]; } [_0x157443(0x1d3)](_0x1c0fe8) { const _0xb66f2 = _0x157443; this[_0xb66f2(0x2ac)] && (this['_currentTime'] += _0x1c0fe8); } [_0x157443(0x34f)]() { const _0x349c8b = _0x157443; this[_0x349c8b(0x28c)](); } [_0x157443(0x17f)]() { const _0x4965cc = _0x157443; this[_0x4965cc(0x209)] && this[_0x4965cc(0x209)][_0x4965cc(0x2cc)]() && (this[_0x4965cc(0x209)][_0x4965cc(0x35b)](), this[_0x4965cc(0x209)] = null); } [_0x157443(0x1b6)]() { const _0x4baaee = _0x157443; this[_0x4baaee(0x17f)](), this[_0x4baaee(0x28c)](); } ['onVoiceStop']() { this['_seBuffer'] = null; } [_0x157443(0x2b0)](_0x779e8b) { const _0x2e682e = _0x157443; this['_seBuffer'] = _0x779e8b, _0x779e8b && _0x779e8b['addStopListener'](this[_0x2e682e(0x2de)]['bind'](this)); } ['isVoiceStoped']() { const _0x4d4e8e = _0x157443; return !this[_0x4d4e8e(0x209)]; } [_0x157443(0x280)](_0x25539e) { const _0x12d36b = _0x157443, _0xe87c5e = this['_currentTime'] / _0x25539e; return Math[_0x12d36b(0x328)](0x1, _0xe87c5e); } [_0x157443(0x192)](_0x459c77) { const _0x53d19f = _0x157443; if (this[_0x53d19f(0x2ee)]()) { const _0x541fe5 = this[_0x53d19f(0x280)](_0x459c77); if (_0x541fe5 >= 0x1) return !![]; } return ![]; } } class _0x171959 { constructor(_0x33f231, _0x55a45b, _0x105b12, _0x4ad77e, _0x1858fc, _0xfee13c, _0x373333) { const _0x8262a6 = _0x157443; this[_0x8262a6(0x28e)] = _0x33f231, this[_0x8262a6(0x15c)] = _0x55a45b || null, this[_0x8262a6(0x212)] = _0x33f231['speakerNameFormat'][_0x8262a6(0x1c4)]('%2'), this[_0x8262a6(0x346)] = _0x4ad77e, this[_0x8262a6(0x300)] = _0x1858fc, this[_0x8262a6(0x14a)] = _0xfee13c || null, this[_0x8262a6(0x2f2)] = _0x373333 || null, this[_0x8262a6(0x1af)] = _0x105b12; } static [_0x157443(0x171)](_0x1747e9) { const _0x14db57 = _0x157443, _0x59a2d6 = JSON['parse'](_0x1747e9), _0x2ef0ca = _0x59a2d6[_0x14db57(0x256)], _0x3cf0f5 = _0x59a2d6['speakerName'], _0x1d5015 = _0x333a2a[_0x14db57(0x171)](_0x59a2d6[_0x14db57(0x180)]), _0xc0aa3d = _0x59a2d6[_0x14db57(0x2d3)], _0x27a1f2 = _0x59a2d6[_0x14db57(0x313)], _0x10e0ee = Number(_0x59a2d6[_0x14db57(0x354)]), _0x2a2126 = Number(_0x59a2d6[_0x14db57(0x228)] || 0x4), _0x1f96aa = _0x59a2d6[_0x14db57(0x255)] ? _0x117494(_0x59a2d6[_0x14db57(0x255)]) : null, _0x12dd5a = _0x59a2d6['freamColor'] || null, _0x3a64b3 = { 'voiceIcon': _0x10e0ee, 'numFaceLines': _0x2a2126, 'speakerNameFormat': _0x3cf0f5 }; return new _0x171959(_0x3a64b3, _0x2ef0ca, _0x1f96aa, _0xc0aa3d, _0x1d5015, _0x27a1f2, _0x12dd5a); } [_0x157443(0x290)]() { return this['_ex2']; } ['windowRect']() { const _0x5f477a = _0x157443; if (this[_0x5f477a(0x1af)]) return this['_windowRect'][_0x5f477a(0x1ca)](); return null; } [_0x157443(0x247)]() { const _0x44ec59 = _0x157443; if (this['_background']) return ImageManager[_0x44ec59(0x275)](this['_background']); return null; } [_0x157443(0x291)]() { const _0x233b67 = _0x157443; if (this[_0x233b67(0x15c)]) return ImageManager[_0x233b67(0x275)](this['_windowFileName']); return null; } [_0x157443(0x287)]() { return 0x8; } [_0x157443(0x20d)]() { return this['_voiceIconInName']; } ['speakerNameFormat']() { const _0x116b52 = _0x157443; return this[_0x116b52(0x28e)][_0x116b52(0x33a)]; } ['createChoiceItemText'](_0x164785) { const _0x3b4bad = _0x157443, _0x3bc1e0 = this[_0x3b4bad(0x300)][_0x3b4bad(0x357)](); return this[_0x3b4bad(0x346)][_0x3b4bad(0x16b)](_0x3bc1e0, _0x164785); } [_0x157443(0x317)]() { return 0x4; } ['itemFrameColor']() { return this['_frameColor']; } } class _0x33828c { constructor(_0x284c7e, _0x10419f, _0xd1914a, _0x3059b0, _0x1a2ff1, _0x56f6c1, _0x5e3284, _0x1fd3be) { const _0x332a3d = _0x157443; this[_0x332a3d(0x24b)] = _0x284c7e, this[_0x332a3d(0x2e7)] = _0x1a2ff1, this[_0x332a3d(0x338)] = _0x10419f, this[_0x332a3d(0x1a3)] = _0x56f6c1, this[_0x332a3d(0x1be)] = _0xd1914a, this[_0x332a3d(0x226)] = _0x3059b0, this[_0x332a3d(0x282)] = _0x5e3284, this[_0x332a3d(0x1db)] = _0x1fd3be; } [_0x157443(0x156)]() { const _0x4e4d62 = _0x157443; this[_0x4e4d62(0x24b)][_0x4e4d62(0x156)](), $gameSwitches['setValue'](this[_0x4e4d62(0x2e7)], !![]); } [_0x157443(0x355)]() { return this['_logStyle']; } [_0x157443(0x248)](_0x436784) { const _0x3d0b55 = _0x157443; return this[_0x3d0b55(0x1be)][_0x3d0b55(0x248)](_0x436784); } [_0x157443(0x1d4)]() { const _0xe41647 = _0x157443; return this[_0xe41647(0x226)][_0xe41647(0x2a8)](); } ['isLogWriteEnabled']() { const _0x2c33a7 = _0x157443; if (!this[_0x2c33a7(0x1a3)]) { if ($gameParty[_0x2c33a7(0x18c)]()) return ![]; } if (this[_0x2c33a7(0x2e7)] > 0x0) return $gameSwitches[_0x2c33a7(0x29c)](this['_logWriiteSwitch']); return !![]; } [_0x157443(0x31c)]() { const _0x18c712 = _0x157443; return this[_0x18c712(0x24b)]; } ['updateInput']() { const _0x15db51 = _0x157443; this['_behaviorList'][_0x15db51(0x1d9)](); } [_0x157443(0x325)]() { return !![]; } [_0x157443(0x146)](_0x40561a) { const _0x4bd64c = _0x157443; if (_0x40561a) return this[_0x4bd64c(0x338)][_0x4bd64c(0x146)](_0x40561a[_0x4bd64c(0x21b)]); return ![]; } [_0x157443(0x277)](_0x5e2788) { const _0x3a8c88 = _0x157443, _0x1ec171 = { 'logLimitBasic': _0x522466(_0x5e2788[_0x3a8c88(0x1f5)], this[_0x3a8c88(0x282)][_0x3a8c88(0x1f5)]), 'logLimitExtends': _0x522466(_0x5e2788[_0x3a8c88(0x310)], this['_defaultOption'][_0x3a8c88(0x310)]) }; return _0x1ec171; } [_0x157443(0x1eb)]() { const _0x2817aa = _0x157443; return this[_0x2817aa(0x1db)]; } } function _0x522466(_0x1556c7, _0x2d4430) { const _0x4889d8 = _0x157443; return Number[_0x4889d8(0x2d6)](_0x1556c7) ? _0x2d4430 : _0x1556c7; } class _0x392045 { constructor() { const _0x358012 = _0x157443; this[_0x358012(0x207)](); } [_0x157443(0x207)]() { const _0x1d349a = _0x157443; this[_0x1d349a(0x339)] = null, this[_0x1d349a(0x144)] = null, this[_0x1d349a(0x17c)] = null; } [_0x157443(0x198)](_0x513ba0) { const _0x1bf6fc = _0x157443; this['_logItem'] && this[_0x1bf6fc(0x144)]['addLines'](_0x513ba0); } ['startMessage'](_0x16df2f, _0x5c8eb2, _0x5a9986) { const _0xf5928d = _0x157443; this[_0xf5928d(0x144)] && this[_0xf5928d(0x144)][_0xf5928d(0x2b5)](_0x16df2f, _0x5c8eb2, _0x5a9986); } [_0x157443(0x27f)](_0x3b7666) { const _0x59dbfc = _0x157443; this['_logItem'] && this[_0x59dbfc(0x144)]['writeTextV8'](_0x3b7666); } [_0x157443(0x29d)](_0x15767b, _0x4ce8dd, _0x514979, _0x39f24b) { const _0x36c4cd = _0x157443; this[_0x36c4cd(0x144)] && this['_logItem'][_0x36c4cd(0x34b)](_0x15767b, _0x4ce8dd, _0x514979, _0x39f24b, this['_se']); } [_0x157443(0x341)]() { const _0x2998c2 = _0x157443; return this[_0x2998c2(0x144)]; } [_0x157443(0x359)](_0x70b24d) { const _0x3b719b = _0x157443; if (!_0x70b24d) { this[_0x3b719b(0x17c)] = null; return; } const _0x14489f = { 'name': _0x70b24d[_0x3b719b(0x21b)], 'pan': _0x70b24d[_0x3b719b(0x294)], 'pitch': _0x70b24d[_0x3b719b(0x145)], 'pos': _0x70b24d[_0x3b719b(0x1b2)] || 0x0, 'volume': _0x70b24d[_0x3b719b(0x181)] }; this[_0x3b719b(0x17c)] = _0x14489f; } [_0x157443(0x2eb)]() { } [_0x157443(0x162)]() { return !!this['_logItem']; } ['close']() { const _0x214ba0 = _0x157443; this[_0x214ba0(0x207)](); } ['open']() { const _0x3ffb34 = _0x157443; this[_0x3ffb34(0x144)] = new MultiLine_Msg(); } } class _0x43379a { constructor() { const _0x26bab8 = _0x157443; this[_0x26bab8(0x1ce)](![]), this[_0x26bab8(0x2c7)](![]), this[_0x26bab8(0x20f)](![]), this[_0x26bab8(0x301)](![]), this[_0x26bab8(0x1e3)](NaN); } ['setScrollIndex'](_0x1811ec) { this['_scrollIndex'] = _0x1811ec; } [_0x157443(0x301)](_0x2f76ff) { const _0x2e8877 = _0x157443; this[_0x2e8877(0x17e)] = !!_0x2f76ff; } [_0x157443(0x20f)](_0x2d5efd) { const _0x36445e = _0x157443; this[_0x36445e(0x1a9)] = _0x2d5efd, this[_0x36445e(0x238)] = !![]; } [_0x157443(0x325)]() { return !this['_parallelMode']; } [_0x157443(0x2c7)](_0x1c7d0c) { const _0x170d8e = _0x157443; this[_0x170d8e(0x2d8)] = !!_0x1c7d0c; } [_0x157443(0x27d)]() { return this['_needsShowFast']; } [_0x157443(0x1ce)](_0x3206ec) { this['_battleMode'] = _0x3206ec; } [_0x157443(0x331)]() { const _0x2ced67 = _0x157443; return this[_0x2ced67(0x2d1)]; } } class _0x4c39ce { constructor() { const _0x1c2552 = _0x157443; this[_0x1c2552(0x153)](); } [_0x157443(0x19c)]() { const _0x412bfb = _0x157443; return this[_0x412bfb(0x358)][_0x412bfb(0x310)]; } [_0x157443(0x2a6)]() { const _0x24e70e = _0x157443; return this['_value'][_0x24e70e(0x1f5)]; } [_0x157443(0x1d1)]() { const _0x279767 = _0x157443; return this[_0x279767(0x312)](); } [_0x157443(0x312)]() { const _0x6e9776 = _0x157443; return _0x6e9776(0x262); } [_0x157443(0x153)]() { const _0x201483 = _0x157443; this[_0x201483(0x216)]({ 'logLimitBasic': 0x1e, 'logLimitExtends': 0x32 }); } [_0x157443(0x216)](_0x5c77f6) { this['_value'] = _0x5c77f6; } ['cloneValue']() { const _0x5e8219 = _0x157443; return { 'logLimitBasic': this[_0x5e8219(0x358)][_0x5e8219(0x1f5)], 'logLimitExtends': this[_0x5e8219(0x358)][_0x5e8219(0x310)] }; } } class _0x5812d0 { constructor() { const _0x207af6 = _0x157443; this[_0x207af6(0x24d)] = new Set(); } [_0x157443(0x146)](_0x5759b0) { } } class _0x4343d9 { constructor(_0x311e19, _0x2862f4) { const _0x4ada9b = _0x157443; this[_0x4ada9b(0x26c)](_0x311e19), this[_0x4ada9b(0x1c7)] = null, this[_0x4ada9b(0x1c1)] = new _0x5eb7d2(), this[_0x4ada9b(0x231)](), this['_readOnlyData'] = _0x2862f4, this[_0x4ada9b(0x235)] = new _0x4c39ce(); } [_0x157443(0x1dd)](_0x52c679) { } ['setOptionValue'](_0x28de41) { const _0x52a42c = _0x157443; _0x28de41 ? this['_optionV3']['setValue']({ 'logLimitBasic': _0x28de41[_0x52a42c(0x1f5)], 'logLimitExtends': _0x28de41[_0x52a42c(0x310)] }) : this['_optionV3'][_0x52a42c(0x153)](); } [_0x157443(0x1ec)]() { const _0x40e613 = _0x157443; return this['_optionV3'][_0x40e613(0x33b)](); } ['option']() { const _0x2a6680 = _0x157443; return this[_0x2a6680(0x235)]; } ['openOptionScene']() { } [_0x157443(0x1a0)]() { const _0x52a022 = _0x157443; return this[_0x52a022(0x1fd)]()[_0x52a022(0x355)]()[_0x52a022(0x290)](); } ['setWorkaround'](_0x14ef63) { const _0x4e4b67 = _0x157443; this[_0x4e4b67(0x2ca)] = _0x14ef63; } ['getWorkaround']() { const _0x4eaeed = _0x157443; return this[_0x4eaeed(0x2ca)]; } [_0x157443(0x273)](_0x52cf6a) { const _0x74631a = _0x157443; this[_0x74631a(0x292)] = _0x52cf6a; } ['onMapEventStarted'](_0x253852) { const _0x26f515 = _0x157443; this[_0x26f515(0x273)](_0x253852); } ['clearLog']() { const _0xef5854 = _0x157443; this[_0xef5854(0x2cd)](new LogSaveContents()); } ['logSizeLimitYellow']() { const _0x17434f = _0x157443; return this['_optionV3'][_0x17434f(0x2a6)](); } [_0x157443(0x26d)]() { const _0x121b6a = _0x157443; return this[_0x121b6a(0x235)][_0x121b6a(0x19c)](); } [_0x157443(0x187)]() { const _0x276d10 = _0x157443, _0x4b2a2f = this['logSizeLimitRed'](), _0x1a6cb1 = this[_0x276d10(0x2e0)](), _0x45014e = this[_0x276d10(0x1c7)][_0x276d10(0x266)](); if (_0x45014e > _0x4b2a2f) return _0x1a6cb1; const _0xb2962e = this[_0x276d10(0x1c7)][_0x276d10(0x23d)](); if (isNaN(_0xb2962e)) return _0x1a6cb1; return Math[_0x276d10(0x30c)](_0xb2962e, _0x1a6cb1); } [_0x157443(0x333)]() { const _0x459ad0 = _0x157443, _0x5b2074 = this[_0x459ad0(0x187)](); this[_0x459ad0(0x1c7)][_0x459ad0(0x333)](_0x5b2074); } [_0x157443(0x25c)]() { const _0x1cd49b = _0x157443; this[_0x1cd49b(0x1c7)][_0x1cd49b(0x25c)](); } [_0x157443(0x2cd)](_0x43e7f6) { const _0x5f2e1a = _0x157443; this[_0x5f2e1a(0x1c7)] = _0x43e7f6, this[_0x5f2e1a(0x183)](); } [_0x157443(0x35c)]() { const _0x540e3d = _0x157443; return this['_contents'][_0x540e3d(0x266)](); } [_0x157443(0x203)]() { const _0x2faa6c = _0x157443; return this[_0x2faa6c(0x1c7)]; } [_0x157443(0x183)]() { const _0x16a565 = _0x157443; !this['_contents'] && (this[_0x16a565(0x1c7)] = new LogSaveContents()); } [_0x157443(0x174)](_0x2be6f9) { const _0x47d584 = _0x157443; if (!_0x2be6f9) return !![]; try { return _0x2be6f9[_0x47d584(0x23e)](), this[_0x47d584(0x2cd)](_0x2be6f9), !![]; } catch (_0x55b36c) { return console[_0x47d584(0x15d)](_0x55b36c), console[_0x47d584(0x15d)](_0x2be6f9), ![]; } } ['readSaveContents'](_0x4ac544) { const _0x3f6238 = _0x157443; this['resetTemporaly'](), this[_0x3f6238(0x1c7)] = null; const _0x2b99fa = _0x4ac544[_0x3f6238(0x269)], _0x52b5a3 = this['tryReadingSaveContents'](_0x2b99fa); this[_0x3f6238(0x183)](); if (!_0x52b5a3) { } } [_0x157443(0x231)]() { const _0x1e69f2 = _0x157443; this[_0x1e69f2(0x1c1)]['setLastVoiceBuffer'](null), this[_0x1e69f2(0x193)] = new _0x43379a(), this[_0x1e69f2(0x309)] = new _0x392045(); } ['onNewGame']() { const _0x1b90f6 = _0x157443; this[_0x1b90f6(0x210)][_0x1b90f6(0x156)](), this[_0x1b90f6(0x231)](), this['clearLog'](); } [_0x157443(0x1e1)]() { } ['readOnryData']() { const _0x57a473 = _0x157443; return this[_0x57a473(0x210)]; } [_0x157443(0x2a9)]() { const _0x2cf1e4 = _0x157443, _0x3bbb3e = this[_0x2cf1e4(0x210)][_0x2cf1e4(0x31c)](); if (_0x3bbb3e[_0x2cf1e4(0x239)]()) return new _0x1eca5d(_0x3bbb3e); if (_0x3bbb3e[_0x2cf1e4(0x27a)]()) return new _0x319c97(_0x3bbb3e); return new _0x2e23a0(_0x3bbb3e); } ['speakerNameFormat']() { const _0x44c134 = _0x157443; return this[_0x44c134(0x210)]['logStyle']()[_0x44c134(0x33a)](); } [_0x157443(0x248)](_0x4bafbd) { const _0x1e3db9 = _0x157443; return this[_0x1e3db9(0x210)][_0x1e3db9(0x248)](_0x4bafbd); } [_0x157443(0x20f)](_0x90e89) { const _0x59a113 = _0x157443; this['_temporaly'][_0x59a113(0x20f)](_0x90e89); } [_0x157443(0x325)]() { const _0x128f86 = _0x157443; return $gameSystem['isSaveEnabled']() && this['_temporaly'][_0x128f86(0x325)]() && this['_readOnlyData']['canSave'](); } ['writeSaveContents'](_0x18a029) { const _0x3fac74 = _0x157443; _0x18a029[_0x3fac74(0x269)] = this[_0x3fac74(0x1e9)](); } [_0x157443(0x30a)](_0x41a7e5) { const _0x15a4b2 = _0x157443; SceneManager['push'](_0x41a7e5), this['_temporaly'][_0x15a4b2(0x2c7)](!![]); } [_0x157443(0x27d)]() { const _0x31442f = _0x157443; return this[_0x31442f(0x193)]['needsShowFast'](); } [_0x157443(0x25d)]() { const _0x3bb360 = _0x157443; if ($gameMessage['isItemChoice']() || $gameMessage[_0x3bb360(0x2b8)]()) return ![]; return !![]; } [_0x157443(0x2af)]() { const _0x3ccc28 = _0x157443; this['updateInput'](), this[_0x3ccc28(0x2e9)](); } [_0x157443(0x1d9)]() { const _0x2359f1 = _0x157443; this['isInputEnabled']() && this[_0x2359f1(0x210)][_0x2359f1(0x1d9)](); } [_0x157443(0x2f1)]() { return 0x1; } [_0x157443(0x293)]() { } ['endAutoTimer']() { const _0x43fc26 = _0x157443; this[_0x43fc26(0x1c1)][_0x43fc26(0x207)](); } [_0x157443(0x324)]() { const _0x527b69 = _0x157443; return this[_0x527b69(0x1c1)][_0x527b69(0x280)](this[_0x527b69(0x210)][_0x527b69(0x1d4)]()); } ['updateAutoTimer']() { const _0x345523 = _0x157443; this[_0x345523(0x1c1)][_0x345523(0x1d3)](0x1); } [_0x157443(0x2ee)]() { const _0x146730 = _0x157443; return this[_0x146730(0x1c1)][_0x146730(0x2ee)](); } ['needsTextTerminate']() { const _0x50037e = _0x157443, _0x72ef2 = this[_0x50037e(0x210)][_0x50037e(0x1d4)](); return this[_0x50037e(0x1c1)][_0x50037e(0x192)](_0x72ef2); } [_0x157443(0x198)](_0x5cea69) { const _0xdae3dd = _0x157443; console[_0xdae3dd(0x288)](_0x5cea69), this[_0xdae3dd(0x309)][_0xdae3dd(0x198)](_0x5cea69); } [_0x157443(0x298)]() { const _0x57646a = _0x157443, _0x1bc25e = this[_0x57646a(0x309)][_0x57646a(0x341)](); _0x1bc25e && (this['_contents'][_0x57646a(0x1ae)](_0x1bc25e), this[_0x57646a(0x27c)]()), this[_0x57646a(0x309)][_0x57646a(0x33d)](); } [_0x157443(0x2b5)](_0x2b775b, _0x28d8ed) { const _0x3089f1 = _0x157443, _0x15928a = $gameMessage['faceName'](), _0x210ab4 = $gameMessage[_0x3089f1(0x22c)](); this['_messageStream'][_0x3089f1(0x29d)](_0x2b775b, _0x28d8ed, _0x15928a, _0x210ab4), this['_autoXXX'][_0x3089f1(0x34f)](), this['_temporaly']['setShowFast'](![]); } [_0x157443(0x344)](_0x294882) { const _0x3c3b71 = _0x157443; this[_0x3c3b71(0x309)][_0x3c3b71(0x27f)](_0x294882); } ['onTerminateMessage']() { const _0x5986ac = _0x157443; this[_0x5986ac(0x1c1)][_0x5986ac(0x1b6)](); } ['setLastCodeIndex'](_0x5cd36b) { const _0x141db0 = _0x157443; this[_0x141db0(0x1c7)]['lastCodeIndex']() === _0x5cd36b ? (this[_0x141db0(0x1e5)](), this[_0x141db0(0x309)][_0x141db0(0x33d)]()) : (this['_contents'][_0x141db0(0x2bb)](_0x5cd36b), this[_0x141db0(0x311)]() && this[_0x141db0(0x309)][_0x141db0(0x214)]()); } [_0x157443(0x321)]() { const _0x2c5499 = _0x157443; return this[_0x2c5499(0x1c7)]['createProxy'](); } ['setBattleMode'](_0x21ebc0) { const _0xc68d82 = _0x157443; this[_0xc68d82(0x193)][_0xc68d82(0x1ce)](_0x21ebc0); } ['isLogButtonEnabled']() { const _0x5cce9f = _0x157443; return !this['_temporaly'][_0x5cce9f(0x331)](); } [_0x157443(0x311)]() { const _0x22a426 = _0x157443; return this[_0x22a426(0x210)][_0x22a426(0x311)](); } [_0x157443(0x2e1)]() { const _0x37ccb2 = _0x157443; if (Utils['isNwjs']()) return !![]; if (Utils[_0x37ccb2(0x2ed)]()) return !![]; return ![]; } ['saveContents']() { const _0x254e03 = _0x157443; if (this['isLogSaveEnabled']()) return this[_0x254e03(0x1c7)]; return this[_0x254e03(0x1c7)][_0x254e03(0x1fc)](); } [_0x157443(0x1e5)]() { const _0x54353b = _0x157443; if (this['isVoiceStoped']()) { const _0xb2d762 = this['_contents']['lastVoice'](); _0xb2d762 && ManoUZ_MessageLog[_0x54353b(0x343)](_0xb2d762, {}); } } [_0x157443(0x1f9)]() { const _0x4357c0 = _0x157443, _0xf51af4 = this[_0x4357c0(0x1c7)][_0x4357c0(0x2c6)](); return !!_0xf51af4; } [_0x157443(0x1c9)](_0x3f9df7) { const _0x5519b2 = _0x157443, _0x14d52b = new LogItem_Choice(_0x3f9df7); this[_0x5519b2(0x1c7)][_0x5519b2(0x1ae)](_0x14d52b), this[_0x5519b2(0x27c)](); } [_0x157443(0x27c)]() { const _0x3c4cb0 = _0x157443; this['_contents'][_0x3c4cb0(0x266)]() > this[_0x3c4cb0(0x26d)]() && this[_0x3c4cb0(0x333)](); } [_0x157443(0x219)]() { const _0x264272 = _0x157443; this[_0x264272(0x1c7)][_0x264272(0x1bb)](), this[_0x264272(0x309)][_0x264272(0x207)](); } [_0x157443(0x345)]() { } [_0x157443(0x163)](_0x2c66d5, _0x1b794e) { const _0x26876c = _0x157443, _0x7668a0 = this[_0x26876c(0x210)][_0x26876c(0x146)](_0x2c66d5); return _0x7668a0 && this[_0x26876c(0x309)][_0x26876c(0x359)](_0x2c66d5), _0x7668a0; } ['setLastVoiceBuffer'](_0xcf0f5) { const _0x1ee481 = _0x157443; this[_0x1ee481(0x1c1)][_0x1ee481(0x2b0)](_0xcf0f5); } ['setAutoMode'](_0x27976b) { const _0x49d860 = _0x157443; this[_0x49d860(0x1c1)][_0x49d860(0x194)](!!_0x27976b); } [_0x157443(0x34e)]() { const _0x4d7a5f = _0x157443; this[_0x4d7a5f(0x1c1)][_0x4d7a5f(0x1e4)](); } ['isTextAutoMode']() { const _0x32341c = _0x157443; return this['_autoXXX'][_0x32341c(0x2ff)](); } } function _0x29e6e3() { return PluginManager['parameters'](_0x54eaab); } function _0x244e28(_0x2b8dcb) { const _0x594516 = _0x157443, _0x4906b1 = new _0x3230b6(_0x5b32e8[_0x594516(0x171)](_0x2b8dcb[_0x594516(0x332)]), 'shift'), _0x373432 = new _0x3f19e3(_0x5b32e8[_0x594516(0x171)](_0x2b8dcb[_0x594516(0x285)]), _0x594516(0x159)), _0x29c72e = new _0x1b65ca(_0x5b32e8['create'](_0x2b8dcb[_0x594516(0x2b3)]), _0x594516(0x34d)), _0xa5751d = new _0x2da1f5(_0x5b32e8[_0x594516(0x171)](_0x2b8dcb['autoButton']), _0x594516(0x151)), _0x10154f = new _0x3088ec(_0x5b32e8[_0x594516(0x171)](_0x2b8dcb[_0x594516(0x32a)]), null), _0x1dcd80 = [_0x4906b1, _0x373432, _0x29c72e, _0xa5751d, _0x10154f][_0x594516(0x1e2)](_0x5d2a7e => { const _0x4fa605 = _0x594516; return _0x5d2a7e[_0x4fa605(0x189)](); }); return _0x1dcd80; } function _0x26f716(_0x2bee65) { return { 'logLimitBasic': _0x2bee65, 'logLimitExtends': 0x32 }; } const _0x441280 = (function () { const _0x5e0ff = _0x157443, _0x41d38e = _0x29e6e3(), _0xc74769 = _0x26f716(Number(_0x41d38e['logSize'] || 0x1e)), _0x1652cb = _0x171959[_0x5e0ff(0x171)](_0x41d38e[_0x5e0ff(0x355)]), _0x127026 = _0x244e28(_0x41d38e), _0x4c9ed0 = _0x344d38[_0x5e0ff(0x171)](_0x41d38e[_0x5e0ff(0x1e6)], _0x127026), _0x3ebff4 = new _0x176936([], null), _0x4f7fe1 = _0x26b1dc['create'](_0x41d38e[_0x5e0ff(0x314)]), _0xf2cca3 = Number(_0x41d38e['logWriteSwitch']), _0x11e0d6 = _0x41d38e['logWriteOnBattle'] === _0x5e0ff(0x28f), _0x48680d = { 'commandName': _0x333a2a[_0x5e0ff(0x171)](_0x41d38e[_0x5e0ff(0x1eb)] || '{}'), 'symbol': _0x5e0ff(0x160) }, _0x3135da = new _0x33828c(_0x4c9ed0, _0x4f7fe1, _0x1652cb, _0x3ebff4, _0xf2cca3, _0x11e0d6, _0xc74769, _0x48680d), _0x2e8cb0 = Utils['RPGMAKER_NAME'] === 'MZ' ? new _0x2302ad() : null, _0x4734d0 = new _0x4343d9(_0x2e8cb0, _0x3135da); return _0x4734d0; }()), _0x2e6f59 = Game_Interpreter[_0x157443(0x249)][_0x157443(0x222)]; Game_Interpreter[_0x157443(0x249)]['terminate'] = function () { _0x2e6f59['call'](this), _0x441280['onEndEvent'](); }; const _0x28dce9 = Game_Interpreter[_0x157443(0x249)][_0x157443(0x2f3)]; Game_Interpreter['prototype'][_0x157443(0x2f3)] = function (_0x5c6d85) { const _0xf0ba14 = _0x157443, _0x7187d9 = this['_index'], _0x219af1 = _0x28dce9[_0xf0ba14(0x1ef)](this, _0x5c6d85); return _0x219af1 && _0x441280[_0xf0ba14(0x2bb)](_0x7187d9), _0x219af1; }; const _0x4b3650 = Game_Interpreter['prototype'][_0x157443(0x25b)]; Game_Interpreter['prototype'][_0x157443(0x25b)] = function (_0x914159) { const _0x1c3e42 = _0x157443, _0x7e7996 = _0x441280[_0x1c3e42(0x163)](_0x914159[0x0], null), _0x3776d6 = _0x4b3650[_0x1c3e42(0x1ef)](this, _0x914159); if (_0x7e7996) { const _0xddf40b = AudioManager[_0x1c3e42(0x2b9)](); _0x441280[_0x1c3e42(0x2b0)](_0xddf40b); } return _0x3776d6; }, AudioManager[_0x157443(0x2b9)] = function () { const _0x27bd75 = _0x157443, _0x2bce73 = this['_seBuffers'][_0x27bd75(0x1ff)], _0x4c7374 = this[_0x27bd75(0x148)][_0x2bce73 - 0x1]; if (_0x4c7374) return _0x4c7374; return null; }; const _0x1b9285 = Window_ChoiceList[_0x157443(0x249)][_0x157443(0x28b)]; Window_ChoiceList[_0x157443(0x249)][_0x157443(0x28b)] = function () { const _0x21d2e0 = _0x157443; if (_0x441280['isLogWriteEnabled']()) { const _0xe0ff43 = this[_0x21d2e0(0x2c3)](this['index']()), _0x4f8242 = this[_0x21d2e0(0x334)](_0xe0ff43); _0x441280['onChoiceOk'](_0x4f8242); } _0x1b9285[_0x21d2e0(0x1ef)](this); }; class _0xe4cbc6 extends _0x2aba06 { [_0x157443(0x26f)](_0x30b48e) { const _0x92c70f = _0x157443; this[_0x92c70f(0x276)] = _0x441280[_0x92c70f(0x1fd)]()[_0x92c70f(0x355)](), this[_0x92c70f(0x207)](), this[_0x92c70f(0x220)](), super[_0x92c70f(0x26f)](_0x30b48e), this[_0x92c70f(0x21a)](); } [_0x157443(0x220)]() { const _0x2e3d53 = _0x157443; this[_0x2e3d53(0x1f7)] = _0x441280[_0x2e3d53(0x321)](); for (const _0x20b1d4 of this[_0x2e3d53(0x1f7)]) { _0x20b1d4 && ImageManager['loadFace'](_0x20b1d4['faceName']()); } } [_0x157443(0x21a)]() { const _0x11462e = _0x157443, _0x11dc78 = this[_0x11462e(0x2c4)]() - 0x1; _0x441280[_0x11462e(0x152)]()['forceSelect'](this, _0x11dc78); } [_0x157443(0x265)]() { const _0x3fd2ed = _0x157443, _0x57c424 = this['_style'][_0x3fd2ed(0x291)](); _0x57c424 ? this[_0x3fd2ed(0x244)] = _0x57c424 : super[_0x3fd2ed(0x265)](); } ['clear']() { const _0x493aeb = _0x157443; this[_0x493aeb(0x1f7)] = []; } ['itemAt'](_0x32f8cf) { return this['_list'][_0x32f8cf]; } [_0x157443(0x172)]() { const _0x2a5e0b = _0x157443; return this['itemAt'](this[_0x2a5e0b(0x14f)]()); } [_0x157443(0x2be)]() { const _0x410838 = _0x157443, _0x3c4b4e = this['currentItem'](); if (_0x3c4b4e) return !!_0x3c4b4e[_0x410838(0x18e)](); return ![]; } [_0x157443(0x20e)]() { } [_0x157443(0x2e5)]() { } [_0x157443(0x2f0)](_0x518c38) { const _0x434ac2 = _0x157443, _0x11081f = this[_0x434ac2(0x2f5)](_0x518c38); if (_0x11081f) return _0x518c38 - _0x11081f[_0x434ac2(0x24f)](); return _0x518c38; } [_0x157443(0x141)](_0x4f9cb9) { const _0xd3fa9b = _0x157443, _0x2e9b34 = this[_0xd3fa9b(0x2f5)](_0x4f9cb9); if (_0x2e9b34) return _0x2e9b34[_0xd3fa9b(0x141)](); return 0x1; } [_0x157443(0x1a6)](_0x2c0ae9) { const _0x540a61 = _0x157443, _0x2e5c18 = this[_0x540a61(0x2f5)](_0x2c0ae9); if (_0x2e5c18) return _0x2e5c18[_0x540a61(0x357)](); return ''; } [_0x157443(0x2c4)]() { const _0xf57e3b = _0x157443; return this[_0xf57e3b(0x1f7)][_0xf57e3b(0x1ff)]; } ['needsDrawFace'](_0x488852) { const _0x598c40 = _0x157443, _0x4a6325 = this[_0x598c40(0x2f5)](_0x488852); if (!_0x4a6325[_0x598c40(0x2bf)]()) return ![]; if (_0x4a6325['isTopItem']()) return !![]; const _0xe0acc1 = this['topIndex'](); if (_0x488852 === _0xe0acc1) return !![]; return ![]; } [_0x157443(0x211)](_0x15510a) { const _0x227eb0 = _0x157443, _0x4d6fee = super[_0x227eb0(0x211)](_0x15510a), _0x5855ef = this[_0x227eb0(0x2f5)](_0x15510a); if (!!_0x5855ef[_0x227eb0(0x2bf)]()) { const _0x489c9b = this[_0x227eb0(0x197)](); _0x4d6fee[_0x227eb0(0x1b9)] -= _0x489c9b, _0x4d6fee['x'] += _0x489c9b + this[_0x227eb0(0x186)](); } return _0x4d6fee; } ['itemPadding']() { const _0x22c70e = _0x157443; return this[_0x22c70e(0x276)][_0x22c70e(0x287)](); } ['faceWidth']() { const _0x283afe = _0x157443; return ImageManager[_0x283afe(0x197)]; } [_0x157443(0x21d)]() { const _0x2a0e77 = _0x157443; return ImageManager[_0x2a0e77(0x21d)]; } [_0x157443(0x157)](_0x3a3d2f) { const _0x4d35e9 = _0x157443, _0x1096c5 = this['itemAt'](_0x3a3d2f), _0x2e4a09 = _0x1096c5 ? _0x1096c5[_0x4d35e9(0x24f)]() : 0x0, _0x3d37c7 = this[_0x4d35e9(0x1a5)](_0x3a3d2f - _0x2e4a09); return _0x3d37c7['x'] += this[_0x4d35e9(0x186)](), _0x3d37c7['y'] += this[_0x4d35e9(0x164)](), _0x3d37c7[_0x4d35e9(0x1b9)] = this[_0x4d35e9(0x197)](), _0x3d37c7['height'] = this['faceWidth'](), _0x3d37c7; } [_0x157443(0x349)](_0x3acb69) { const _0x17c8d3 = _0x157443; if (this['needsDrawFace'](_0x3acb69)) { const _0x2fecca = this[_0x17c8d3(0x157)](_0x3acb69), _0xd7b3e6 = this[_0x17c8d3(0x2f5)](_0x3acb69); this[_0x17c8d3(0x229)](_0xd7b3e6['faceName'](), _0xd7b3e6[_0x17c8d3(0x22c)](), _0x2fecca['x'], _0x2fecca['y'], _0x2fecca['width'], _0x2fecca[_0x17c8d3(0x33e)]); } } [_0x157443(0x246)](_0x4f83ac) { const _0x53e7ee = _0x157443, _0x182809 = this['itemAt'](_0x4f83ac); if (!_0x182809) return; if (!!_0x182809[_0x53e7ee(0x2a2)]() && this[_0x53e7ee(0x276)][_0x53e7ee(0x20d)]()) return; if (_0x182809[_0x53e7ee(0x2aa)]()) { const _0x55195c = this[_0x53e7ee(0x167)](_0x4f83ac), _0x3c1591 = _0x55195c['x'] + _0x55195c[_0x53e7ee(0x1b9)] - ImageManager[_0x53e7ee(0x173)], _0x4ba68e = _0x55195c['y'], _0x35d7e7 = _0x441280['getLogStyleEX2']()[_0x53e7ee(0x158)]; this[_0x53e7ee(0x267)](_0x35d7e7, _0x3c1591, _0x4ba68e); } } [_0x157443(0x190)]() { const _0x48d65a = _0x157443; return this[_0x48d65a(0x260)]() + 0x4; } ['rowSpacing']() { return 0x0; } [_0x157443(0x304)](_0x572424) { const _0x41fcba = _0x157443, _0x4a5a8b = this[_0x41fcba(0x276)][_0x41fcba(0x2ad)](); if (!_0x4a5a8b) return; const _0x2562c6 = this[_0x41fcba(0x2f5)](_0x572424); if (!_0x2562c6) return; if (!_0x2562c6[_0x41fcba(0x1ab)]()) return; this[_0x41fcba(0x164)]; const _0x46c80e = this[_0x41fcba(0x167)](_0x572424), _0x4535a7 = 0x0, _0x497e4f = 0x2, _0x5963b7 = this[_0x41fcba(0x2c2)]; _0x5963b7[_0x41fcba(0x2bc)](_0x46c80e['x'] + _0x4535a7, _0x46c80e['y'] + _0x4535a7, _0x46c80e['width'] - _0x4535a7 * 0x2, _0x46c80e[_0x41fcba(0x33e)] - _0x4535a7 * 0x2, _0x4a5a8b), _0x5963b7['clearRect'](_0x46c80e['x'] + _0x497e4f, _0x46c80e['y'] + _0x497e4f, _0x46c80e['width'] - _0x497e4f * 0x2, _0x46c80e['height'] - _0x497e4f * 0x2); } [_0x157443(0x147)](_0x895328) { const _0x3b8bda = _0x157443; this[_0x3b8bda(0x304)](_0x895328), this[_0x3b8bda(0x349)](_0x895328), this['drawVoiceIcon'](_0x895328), super[_0x3b8bda(0x147)](_0x895328); } } class _0x3c4898 extends Window_Selectable { [_0x157443(0x2ce)](_0x135f9c) { const _0x4f88f2 = _0x157443; this[_0x4f88f2(0x1f7)] = _0x135f9c; } } class _0x2f1b25 extends Scene_MenuBase { [_0x157443(0x171)]() { const _0x112c3f = _0x157443; super[_0x112c3f(0x171)](), this[_0x112c3f(0x245)](); } [_0x157443(0x2ba)]() { return _0x441280; } [_0x157443(0x2a3)]() { const _0x58ea6e = _0x157443, _0x2443b1 = this[_0x58ea6e(0x2ba)]()['readOnryData']()[_0x58ea6e(0x355)]()[_0x58ea6e(0x247)](); _0x2443b1 ? (this[_0x58ea6e(0x154)] = new Sprite(_0x2443b1), this[_0x58ea6e(0x2fb)](this[_0x58ea6e(0x154)])) : super[_0x58ea6e(0x2a3)](); } [_0x157443(0x245)]() { const _0x12cb2c = _0x157443; this[_0x12cb2c(0x201)](), this[_0x12cb2c(0x2a7)](); } ['start']() { const _0xce8e4a = _0x157443; super[_0xce8e4a(0x170)](), this['_logWindow'][_0xce8e4a(0x353)](); } [_0x157443(0x2b4)]() { return ![]; } [_0x157443(0x176)]() { const _0x1a2d8b = _0x157443; if (this[_0x1a2d8b(0x2b4)]()) return super['helpAreaHeight'](); return 0x0; } ['isBottomHelpMode']() { return ![]; } [_0x157443(0x221)]() { const _0x34f694 = _0x157443, _0x1b2e5f = _0x441280[_0x34f694(0x1fd)]()[_0x34f694(0x355)]()[_0x34f694(0x255)](); if (_0x1b2e5f) return _0x1b2e5f; return new Rectangle(0x0, this['mainAreaTop'](), Graphics[_0x34f694(0x30d)], this[_0x34f694(0x215)]()); } ['onBacklogOk']() { const _0x12e88d = _0x157443, _0xb5da2a = this[_0x12e88d(0x175)]['currentItem'](); _0xb5da2a && ManoUZ_MessageLog['playVoice'](_0xb5da2a[_0x12e88d(0x18e)](), {}), this[_0x12e88d(0x175)][_0x12e88d(0x17b)](); } [_0x157443(0x2a7)]() { const _0x375be6 = _0x157443, _0x1158ba = this[_0x375be6(0x221)](), _0x2ddd70 = new _0xe4cbc6(_0x1158ba); this['needsHelpWindow']() && _0x2ddd70[_0x375be6(0x14b)](this['_helpWindow']), _0x2ddd70[_0x375be6(0x17b)](), _0x2ddd70[_0x375be6(0x2d2)]('ok', this[_0x375be6(0x1f4)]['bind'](this)), _0x2ddd70[_0x375be6(0x2d2)](_0x375be6(0x2ec), this['onBacklogCancel']['bind'](this)), this[_0x375be6(0x175)] = _0x2ddd70, this[_0x375be6(0x2bd)](_0x2ddd70); } [_0x157443(0x1e8)]() { const _0x4bf78f = _0x157443; this[_0x4bf78f(0x1a1)](); } } class _0x11e80e { [_0x157443(0x264)]() { return 0x1; } [_0x157443(0x318)]() { return 0x1; } [_0x157443(0x242)]() { const _0x359fdb = _0x157443, _0x30d29e = Math[_0x359fdb(0x30c)](0x1, this[_0x359fdb(0x264)]()); return this[_0x359fdb(0x318)]() / _0x30d29e; } } class _0x252663 extends PIXI['Graphics']{ constructor() { super(), this['reset'](); } ['redraw'](_0x57d011, _0x2f0e55) { const _0x409d77 = _0x157443; this['clear'](), this[_0x409d77(0x206)](0xa, 0xff0000); const _0x4725fe = -Math['PI'] / 0x2; this[_0x409d77(0x1cf)](0x0, 0x0), this['arc'](_0x2f0e55, _0x2f0e55, _0x2f0e55, _0x4725fe, Math['PI'] * _0x57d011 * 0x2 + _0x4725fe), this['endFill'](); } ['setRadius'](_0x325a27) { const _0x7b6968 = _0x157443; this[_0x7b6968(0x360)] = _0x325a27; } [_0x157443(0x153)]() { const _0xabcae4 = _0x157443; this[_0xabcae4(0x24c)] = 0x0; } [_0x157443(0x2af)]() { const _0x3f13ee = _0x157443; this['_lastValue'] += 0x1, this[_0x3f13ee(0x24c)] > 0x1a4 && (this['_lastValue'] = 0x0), this[_0x3f13ee(0x1f2)][_0x3f13ee(0x1b9)] = 0x5, this['redraw'](this[_0x3f13ee(0x24c)] / 0xc8, 0x20); } } class _0x23702e extends _0x252663 { constructor(_0x9a97f1) { const _0x1f4aef = _0x157443; super(), this[_0x1f4aef(0x360)] = _0x9a97f1; } [_0x157443(0x2af)]() { const _0x2502ab = _0x157443; this['visible'] = !![]; const _0x35cc6c = _0x441280[_0x2502ab(0x324)](); this[_0x2502ab(0x27b)](_0x35cc6c, this[_0x2502ab(0x360)]); } } class _0x1be676 extends Sprite_Clickable { constructor(_0x21df07) { const _0x55390b = _0x157443; super(); const _0x44f379 = _0x21df07[_0x55390b(0x20c)](); this[_0x55390b(0x1d2)] = _0x21df07, this[_0x55390b(0x1ad)] = _0x44f379[_0x55390b(0x1ad)](); const _0x2a89b7 = _0x44f379[_0x55390b(0x223)](); this[_0x55390b(0x2e6)](_0x2a89b7['x'], _0x2a89b7['y'], _0x2a89b7['width'], _0x2a89b7['height']); const _0x466a5d = _0x44f379['coldFrame'](); this['setColdFrame'](_0x466a5d['x'], _0x466a5d['y'], _0x466a5d['width'], _0x466a5d[_0x55390b(0x33e)]), this[_0x55390b(0x303)](), this['x'] = _0x44f379['x'](), this['y'] = _0x44f379['y'](), this[_0x55390b(0x182)] = ![], this[_0x55390b(0x224)] = ![]; } [_0x157443(0x18a)](_0x5c2915) { } get ['height']() { const _0xf2ec0e = _0x157443; return Math[_0xf2ec0e(0x30c)](this[_0xf2ec0e(0x243)][_0xf2ec0e(0x33e)], this[_0xf2ec0e(0x25e)][_0xf2ec0e(0x33e)]); } get ['width']() { const _0x2aaae6 = _0x157443; return Math['max'](this[_0x2aaae6(0x243)][_0x2aaae6(0x1b9)], this[_0x2aaae6(0x25e)][_0x2aaae6(0x1b9)]); } ['update']() { const _0x4a2ee4 = _0x157443; super['update'](), this[_0x4a2ee4(0x30f)](), this[_0x4a2ee4(0x303)](); } [_0x157443(0x2e6)](_0x5ac5e3, _0x46c9d2, _0x3adf95, _0x105b48) { const _0x3f9393 = _0x157443; this[_0x3f9393(0x243)] = new Rectangle(_0x5ac5e3, _0x46c9d2, _0x3adf95, _0x105b48); } [_0x157443(0x1e7)](_0x5e190, _0x1aec40, _0x2d0b4f, _0x406bb9) { const _0x3c6e6f = _0x157443; this[_0x3c6e6f(0x25e)] = new Rectangle(_0x5e190, _0x1aec40, _0x2d0b4f, _0x406bb9); } [_0x157443(0x2ea)]() { const _0x5e7963 = _0x157443; return this[_0x5e7963(0x2b7)](); } [_0x157443(0x303)]() { const _0x73cf4e = _0x157443, _0x1852c6 = this['isButtonHot']() ? this[_0x73cf4e(0x243)] : this[_0x73cf4e(0x25e)]; _0x1852c6 && this[_0x73cf4e(0x30b)](_0x1852c6['x'], _0x1852c6['y'], _0x1852c6[_0x73cf4e(0x1b9)], _0x1852c6[_0x73cf4e(0x33e)]); } [_0x157443(0x1b0)]() { const _0x5432cd = _0x157443; if (this['parent']) { if (!this[_0x5432cd(0x337)][_0x5432cd(0x307)]) return ![]; } return this[_0x5432cd(0x307)] && this[_0x5432cd(0x1d2)][_0x5432cd(0x26e)](); } [_0x157443(0x1a7)]() { const _0x30aa75 = _0x157443; this[_0x30aa75(0x1b0)]() && this[_0x30aa75(0x1d2)][_0x30aa75(0x1a7)](); } [_0x157443(0x2b5)]() { const _0x4f5ebd = _0x157443; this[_0x4f5ebd(0x307)] = this['_behavior'][_0x4f5ebd(0x26e)](); } } class _0x22ba76 extends _0x1be676 { constructor(_0x5b4c21) { super(_0x5b4c21), this['_onOff'] = _0x5b4c21; } [_0x157443(0x1a7)]() { const _0xac3db5 = _0x157443; super[_0xac3db5(0x1a7)](), this[_0xac3db5(0x303)](); } [_0x157443(0x2ea)]() { const _0x5cd699 = _0x157443; return this[_0x5cd699(0x1f0)] && this[_0x5cd699(0x1f0)]['isButtonOn'](); } } class _0x447ace extends _0x22ba76 { constructor(_0x37fac7) { const _0x1cc1d7 = _0x157443; super(_0x37fac7); const _0x46b576 = _0x37fac7[_0x1cc1d7(0x20c)]()[_0x1cc1d7(0x1b9)]() / 0x2; this[_0x1cc1d7(0x278)] = new _0x23702e(_0x46b576), this[_0x1cc1d7(0x2fb)](this[_0x1cc1d7(0x278)]); } [_0x157443(0x2b5)]() { const _0x5d31d5 = _0x157443; super['startMessage'](), this[_0x5d31d5(0x278)][_0x5d31d5(0x27b)](0x0, 0x0); } } function _0x37aa2b(_0x4ac229) { const _0x42cbe4 = _0x157443; return { 'left': _0x4ac229['x'], 'top': _0x4ac229['y'], 'right': _0x4ac229['x'] + _0x4ac229[_0x42cbe4(0x1b9)], 'bottom': _0x4ac229['y'] + _0x4ac229['height'] }; } class _0x11494f extends PIXI[_0x157443(0x233)]{ constructor(_0x30e800) { const _0x4cbb71 = _0x157443; super(), this[_0x4cbb71(0x258)] = new Rectangle(0x0, 0x0, 0x0, 0x0), this['y'] = -0x1e240, this[_0x4cbb71(0x24b)] = _0x30e800, this[_0x4cbb71(0x315)] = _0x30e800[_0x4cbb71(0x15b)](), this[_0x4cbb71(0x31f)](), this[_0x4cbb71(0x2fb)](...this[_0x4cbb71(0x315)]); } get ['width']() { const _0x23a6c4 = _0x157443; return this[_0x23a6c4(0x1bc)]; } get [_0x157443(0x33e)]() { const _0x5cd5be = _0x157443; return this[_0x5cd5be(0x342)]; } [_0x157443(0x31f)]() { const _0x4f7109 = _0x157443; if (this[_0x4f7109(0x315)][_0x4f7109(0x1ff)] <= 0x0) { this[_0x4f7109(0x1bc)] = 0x0, this[_0x4f7109(0x342)] = 0x0; return; } const _0x41bc6c = this[_0x4f7109(0x315)][0x0], _0x2344e6 = _0x37aa2b(_0x41bc6c); for (let _0x4f67e3 = 0x1; _0x4f67e3 < this[_0x4f7109(0x315)]['length']; _0x4f67e3++) { const _0x55d330 = _0x37aa2b(this[_0x4f7109(0x315)][_0x4f67e3]); _0x2344e6[_0x4f7109(0x1bf)] = Math[_0x4f7109(0x328)](_0x2344e6['left'], _0x55d330[_0x4f7109(0x1bf)]), _0x2344e6[_0x4f7109(0x2c1)] = Math[_0x4f7109(0x30c)](_0x2344e6[_0x4f7109(0x2c1)], _0x55d330[_0x4f7109(0x2c1)]), _0x2344e6['top'] = Math[_0x4f7109(0x328)](_0x2344e6['top'], _0x55d330[_0x4f7109(0x348)]), _0x2344e6[_0x4f7109(0x32d)] = Math['max'](_0x2344e6[_0x4f7109(0x32d)], _0x55d330[_0x4f7109(0x32d)]); } this[_0x4f7109(0x1bc)] = Math[_0x4f7109(0x33f)](_0x2344e6[_0x4f7109(0x1bf)] - _0x2344e6[_0x4f7109(0x2c1)]), this['_height'] = Math['abs'](_0x2344e6[_0x4f7109(0x348)] - _0x2344e6[_0x4f7109(0x32d)]); } [_0x157443(0x361)]() { const _0x5a3e73 = _0x157443; return this[_0x5a3e73(0x315)][_0x5a3e73(0x2b1)](_0x4d30c8 => { const _0x347017 = _0x5a3e73; return _0x4d30c8[_0x347017(0x31a)](); }); } ['updateInput']() { for (const _0x44560b of this['_buttonsSprites']) { _0x44560b['update'](); } } ['startMessage']() { const _0x5bdbda = _0x157443; this[_0x5bdbda(0x307)] = !this['_behaviorList'][_0x5bdbda(0x21f)](); for (const _0x1d8f97 of this['_buttonsSprites']) { _0x1d8f97[_0x5bdbda(0x2b5)](); } } ['endMessage']() { } [_0x157443(0x208)](_0x9bd79e) { return 0x0; } ['updatePlacement'](_0x405f50) { } [_0x157443(0x319)]() { return 0x0; } } class _0x1eca5d extends _0x11494f { [_0x157443(0x319)]() { const _0x38055e = _0x157443; return this[_0x38055e(0x33e)] - 0x10; } ['updatePlacement'](_0x4bf569) { const _0x4e26a0 = _0x157443, _0x3b5a82 = this[_0x4e26a0(0x337)][_0x4e26a0(0x1b9)] - this['width'], _0x320d0e = this[_0x4e26a0(0x337)][_0x4e26a0(0x33e)] - this[_0x4e26a0(0x33e)]; this['x'] = _0x3b5a82 + this[_0x4e26a0(0x24b)]['offsetX'](), this['y'] = _0x320d0e + this[_0x4e26a0(0x24b)]['offsetY'](); } } class _0x2e23a0 extends _0x11494f { [_0x157443(0x17d)](_0x3c9845) { const _0xe50425 = _0x157443, _0x401344 = this['parent'][_0xe50425(0x1b9)] - this[_0xe50425(0x1b9)], _0x330019 = _0x3c9845 === 0x0 ? this[_0xe50425(0x337)]['height'] : -this[_0xe50425(0x33e)]; this['x'] = _0x401344 + this['_behaviorList']['offsetX'](), this['y'] = _0x330019 + this[_0xe50425(0x24b)][_0xe50425(0x1b3)](); } [_0x157443(0x208)](_0x1e0257) { const _0x2fb084 = _0x157443; if (_0x1e0257 === 0x1) return 0x0; if (_0x1e0257 === 0x2) return -this[_0x2fb084(0x33e)]; return this['height']; } } class _0x319c97 extends _0x11494f { constructor(_0x391f34) { super(_0x391f34); } [_0x157443(0x17d)](_0x8b83ce) { const _0x739002 = _0x157443; this[_0x739002(0x307)] = _0x8b83ce === 0x2, this['x'] = this[_0x739002(0x24b)]['offsetX']() - this['parent']['x'], this['y'] = this[_0x739002(0x24b)]['offsetY']() - this[_0x739002(0x337)]['y']; } } const _0x4798a6 = Window_ChoiceList['prototype']['updatePlacement']; Window_ChoiceList[_0x157443(0x249)]['updatePlacement'] = function () { const _0x3b4eb1 = _0x157443; _0x4798a6[_0x3b4eb1(0x1ef)](this); if ($gameMessage[_0x3b4eb1(0x22d)]() === 0x2) { const _0x44a861 = this[_0x3b4eb1(0x327)][_0x3b4eb1(0x1ee)](); this['y'] += _0x44a861; } }; const _0x1dc1d0 = Window_Message[_0x157443(0x249)][_0x157443(0x26f)]; Window_Message[_0x157443(0x249)]['initialize'] = function (_0x336585) { const _0x47523b = _0x157443; this[_0x47523b(0x23f)] = null; if (!_0x441280[_0x47523b(0x1a2)]()) { _0x1dc1d0[_0x47523b(0x1ef)](this, _0x336585); return; } const _0x27273b = _0x336585['clone'](), _0x39a851 = _0x441280[_0x47523b(0x2a9)](); this[_0x47523b(0x23f)] = _0x39a851, _0x27273b['height'] += _0x39a851[_0x47523b(0x319)](), _0x1dc1d0['call'](this, _0x27273b), this['addChild'](_0x39a851); }; function _0x168abf(_0x35f623) { return _0x35f623['_logButtonGroop']; } Window_Message[_0x157443(0x249)]['logButtonAreaHeight'] = function () { const _0x59cca6 = _0x157443, _0x13d7da = _0x168abf(this); if (_0x13d7da) return _0x13d7da[_0x59cca6(0x208)](this['_positionType']); return 0x0; }; const _0x16c350 = Window_Message[_0x157443(0x249)][_0x157443(0x252)]; Window_Message[_0x157443(0x249)][_0x157443(0x252)] = function () { const _0x1a6957 = _0x157443, _0x17df34 = _0x16c350[_0x1a6957(0x1ef)](this), _0x25f136 = _0x168abf(this); if (_0x25f136) return _0x17df34 - _0x25f136['windowStretchY'](); return _0x17df34; }; const _0x4fadc3 = Window_Message[_0x157443(0x249)]['newPage']; Window_Message[_0x157443(0x249)]['newPage'] = function (_0x430e91) { const _0x3b486d = _0x157443, _0x5753be = this[_0x3b486d(0x260)](), _0x4e6f26 = Math[_0x3b486d(0x143)](this[_0x3b486d(0x339)][_0x3b486d(0x1c5)] / _0x5753be); if (this[_0x3b486d(0x339)][_0x3b486d(0x14f)] > 0x0) { const _0x5802d1 = this[_0x3b486d(0x339)][_0x3b486d(0x357)][_0x3b486d(0x286)](0x0, this['_textState']['index']); this; } _0x441280['addLines'](Math[_0x3b486d(0x328)](_0x4e6f26, 0x4)), _0x4fadc3[_0x3b486d(0x1ef)](this, _0x430e91); }; const _0x31710c = Window_Message[_0x157443(0x249)]['onEndOfText']; Window_Message[_0x157443(0x249)][_0x157443(0x218)] = function () { const _0xd1fe27 = _0x157443, _0x2c6586 = this[_0xd1fe27(0x260)](), _0x2c9a64 = Math[_0xd1fe27(0x143)](this[_0xd1fe27(0x339)]['outputHeight'] / _0x2c6586); _0x441280[_0xd1fe27(0x198)](Math[_0xd1fe27(0x328)](_0x2c9a64, 0x4)), _0x441280[_0xd1fe27(0x298)](), _0x31710c['call'](this); }; const _0x5c234c = Window_Message[_0x157443(0x249)][_0x157443(0x2b5)]; Window_Message[_0x157443(0x249)]['startMessage'] = function () { const _0x1c6450 = _0x157443; _0x5c234c[_0x1c6450(0x1ef)](this); const _0x505390 = _0x168abf(this); if (_0x505390) { _0x441280[_0x1c6450(0x27d)]() && (this[_0x1c6450(0x330)] = !![]); const _0x36d2a7 = this[_0x1c6450(0x2b6)][_0x1c6450(0x334)]($gameMessage['speakerName']()); _0x441280[_0x1c6450(0x2b5)](_0x36d2a7, this['_textState'][_0x1c6450(0x357)]), _0x505390[_0x1c6450(0x2b5)](); } }; const _0x1df162 = Window_Message['prototype'][_0x157443(0x31d)]; Window_Message[_0x157443(0x249)][_0x157443(0x31d)] = function () { const _0x5e3408 = _0x157443; _0x441280[_0x5e3408(0x1b6)](), _0x1df162[_0x5e3408(0x1ef)](this); }; const _0x364178 = Window_Message[_0x157443(0x249)][_0x157443(0x17d)]; Window_Message[_0x157443(0x249)]['updatePlacement'] = function () { const _0x206522 = _0x157443; _0x364178[_0x206522(0x1ef)](this); const _0x338c3c = _0x168abf(this); _0x338c3c && _0x338c3c[_0x206522(0x17d)](this[_0x206522(0x25a)]); }; function _0x34368e(_0xc7174) { const _0x14d874 = _0x157443; return _0xc7174[_0x14d874(0x162)]() && !_0xc7174['isClosing'](); } const _0x4c5024 = Window_Message['prototype']['updateInput']; Window_Message[_0x157443(0x249)][_0x157443(0x1d9)] = function () { const _0x1ceff1 = _0x157443; _0x34368e(this) && (!this[_0x1ceff1(0x339)] && (!$gameParty[_0x1ceff1(0x18c)]() && (_0x441280['updateInput'](), this[_0x1ceff1(0x23f)] && this['_logButtonGroop']['updateInput']()))); const _0x3f4403 = this[_0x1ceff1(0x142)], _0x1147a6 = _0x4c5024[_0x1ceff1(0x1ef)](this); if (!_0x441280['isTextAutoMode']()) return _0x1147a6; if (this['pause']) { !_0x3f4403 && _0x441280[_0x1ceff1(0x293)](); _0x441280[_0x1ceff1(0x2e9)](); if (_0x441280[_0x1ceff1(0x25f)]()) return _0x441280[_0x1ceff1(0x257)](), this['pause'] = ![], this[_0x1ceff1(0x339)] = null, this['terminateMessage'](), ![]; return !![]; } return _0x1147a6; }; const _0x26fb24 = Window_Message['prototype']['isTriggered']; Window_Message[_0x157443(0x249)][_0x157443(0x200)] = function () { const _0x1e5d7c = _0x157443, _0x34f284 = _0x168abf(this); if (_0x34f284 && TouchInput[_0x1e5d7c(0x259)]() && _0x34f284[_0x1e5d7c(0x361)]()) return ![]; return _0x26fb24[_0x1e5d7c(0x1ef)](this); }; const _0x5628bc = Scene_Map[_0x157443(0x249)][_0x157443(0x29e)]; Scene_Map[_0x157443(0x249)]['createDisplayObjects'] = function () { const _0x32cbd3 = _0x157443; _0x441280[_0x32cbd3(0x1ce)](![]), _0x5628bc[_0x32cbd3(0x1ef)](this), _0x441280[_0x32cbd3(0x27d)]() && (this[_0x32cbd3(0x327)][_0x32cbd3(0x1ed)] = 0xff); }; const _0x3f2f5b = Scene_Map[_0x157443(0x249)][_0x157443(0x222)]; Scene_Map[_0x157443(0x249)]['terminate'] = function () { const _0xc3507a = _0x157443; _0x3f2f5b[_0xc3507a(0x1ef)](this); if (SceneManager['isNextScene'](_0x2f1b25)) { } }; const _0x24f8d0 = Scene_Battle['prototype'][_0x157443(0x29e)]; Scene_Battle[_0x157443(0x249)][_0x157443(0x29e)] = function () { const _0x4e368a = _0x157443; _0x441280['setBattleMode'](!![]), _0x24f8d0[_0x4e368a(0x1ef)](this); }; function _0x3c9731() { } const _0x34ce3d = Game_Map[_0x157443(0x249)]['setupStartingMapEvent']; Game_Map['prototype']['setupStartingMapEvent'] = function () { const _0x1bff66 = _0x157443, _0xae7aae = _0x34ce3d[_0x1bff66(0x1ef)](this); if (_0xae7aae) { const _0x571efb = this[_0x1bff66(0x241)]['eventId'](), _0x1ead2a = this[_0x1bff66(0x283)](_0x571efb); if (_0x1ead2a) { const _0x2c02c4 = new UZLOG_EventUniqueID(this[_0x1bff66(0x352)](), _0x571efb, _0x1ead2a['_pageIndex']); _0x441280[_0x1bff66(0x2a1)](_0x2c02c4); } } return _0xae7aae; }; const _0xade21f = Window_MenuCommand['prototype']['addOriginalCommands']; Window_MenuCommand[_0x157443(0x249)][_0x157443(0x2ab)] = function () { const _0x5e5a2d = _0x157443; _0xade21f[_0x5e5a2d(0x1ef)](this); const _0x2fe356 = _0x441280['readOnryData']()[_0x5e5a2d(0x1eb)](); _0x2fe356[_0x5e5a2d(0x2c3)] && this['addCommand'](_0x2fe356[_0x5e5a2d(0x2c3)][_0x5e5a2d(0x357)](), _0x2fe356[_0x5e5a2d(0x227)]); }; const _0x452a2a = Scene_Menu[_0x157443(0x249)][_0x157443(0x149)]; Scene_Menu[_0x157443(0x249)][_0x157443(0x149)] = function () { const _0x4a4764 = _0x157443; _0x452a2a[_0x4a4764(0x1ef)](this); const _0xbc602e = _0x441280['readOnryData']()['menuCommand'](); this[_0x4a4764(0x34a)][_0x4a4764(0x2d2)](_0xbc602e['symbol'], () => { SceneManager['push'](_0x2f1b25); }); }; class _0xb898a0 { constructor(_0x2ed007, _0x4914ca, _0x2b3371) { const _0x49ef76 = _0x157443; this['_commandName'] = _0x2ed007, this[_0x49ef76(0x2fc)] = _0x4914ca, this[_0x49ef76(0x2d0)] = _0x2b3371; } [_0x157443(0x140)](_0x55ff2a) { const _0x275d02 = _0x157443, _0x473cc2 = {}, _0x1ef0e0 = Math[_0x275d02(0x328)](_0x55ff2a['length'], this[_0x275d02(0x2fc)][_0x275d02(0x1ff)]); for (let _0xcc9d4b = 0x0; _0xcc9d4b < _0x1ef0e0; ++_0xcc9d4b) { const _0x30914a = this[_0x275d02(0x2fc)][_0xcc9d4b]; _0x473cc2[_0x30914a] = _0x55ff2a[_0xcc9d4b]; } return _0x473cc2; } [_0x157443(0x185)](_0x3353b4) { const _0x51f66a = _0x157443, _0x2c0c01 = this[_0x51f66a(0x140)](_0x3353b4); this[_0x51f66a(0x24a)](_0x2c0c01); } [_0x157443(0x24a)](_0x1c3035) { const _0x1b67b5 = _0x157443; this[_0x1b67b5(0x2d0)](_0x1c3035); } } class _0x3e8d7c { constructor(_0x17b19e) { const _0xa950 = _0x157443; this['_map'] = new Map(), this[_0xa950(0x165)] = _0x17b19e; } ['registerCommand'](_0x584603, _0x3bab04, _0x4df725) { const _0x5a1d26 = _0x157443; Utils['RPGMAKER_NAME'] === 'MZ' && this['registerCommandMZ'](_0x584603, _0x4df725), this[_0x5a1d26(0x284)]() && this['registerCommandMV'](_0x584603, _0x3bab04, _0x4df725); } [_0x157443(0x284)]() { const _0x95fa55 = _0x157443; return Utils[_0x95fa55(0x1c8)] === 'MV'; } [_0x157443(0x1fe)](_0x40eb79, _0x1e287a) { const _0x55704d = _0x157443; PluginManager['registerCommand'](this[_0x55704d(0x165)], _0x40eb79, _0x1e287a); } [_0x157443(0x16f)](_0x4a7f39, _0x35c5f8, _0x5496c1) { const _0x47598d = _0x157443, _0x141dc7 = new _0xb898a0(_0x4a7f39, _0x35c5f8, _0x5496c1); this[_0x47598d(0x21c)][_0x47598d(0x1c6)](_0x4a7f39, _0x141dc7); } [_0x157443(0x2db)](_0x31c62e, _0x5ac8ee, _0x17aec4) { const _0x501ec1 = _0x157443, _0x3bec0a = this[_0x501ec1(0x21c)]['get'](_0x5ac8ee); if (_0x3bec0a) { const _0x21f8c4 = _0x3bec0a[_0x501ec1(0x140)](_0x17aec4); return _0x3bec0a[_0x501ec1(0x24a)](_0x21f8c4), !![]; } return ![]; } } const _0x1303f3 = new _0x3e8d7c(_0x54eaab); _0x1303f3[_0x157443(0x254)](_0x157443(0x1bd), [], () => { const _0x13dd88 = _0x157443; SceneManager[_0x13dd88(0x1ba)](_0x2f1b25); }), _0x1303f3[_0x157443(0x254)](_0x157443(0x17a), [], () => { _0x441280['clearLog'](); }), _0x1303f3[_0x157443(0x254)](_0x157443(0x35e), [], _0x411d25 => { const _0x3d106f = _0x157443; _0x441280[_0x3d106f(0x333)](); }), _0x1303f3['registerCommand']('MakeBookmark', [], _0x8373af => { _0x441280['makeBookmark'](); }), _0x1303f3[_0x157443(0x254)](_0x157443(0x169), [], _0x3f23cc => { const _0x3b5a04 = _0x157443, _0x43d947 = Number(_0x3f23cc['variableId']), _0x20246a = _0x441280[_0x3b5a04(0x35c)](); $gameVariables[_0x3b5a04(0x216)](_0x43d947, _0x20246a); }), _0x1303f3[_0x157443(0x254)](_0x157443(0x308), [_0x157443(0x1f1)], _0x50d109 => { const _0x26dc5d = _0x157443; _0x441280[_0x26dc5d(0x194)](_0x50d109[_0x26dc5d(0x1f1)] === _0x26dc5d(0x28f)); }), _0x1303f3[_0x157443(0x254)]('SetJumpTarget', [_0x157443(0x20b)], function (_0x3f5aab) { this['setJumpTarget'](_0x3f5aab['label']); }), _0x1303f3[_0x157443(0x254)](_0x157443(0x347), [_0x157443(0x15f)], _0x482668 => { const _0x5c3665 = _0x157443, _0x34342b = Number(_0x482668[_0x5c3665(0x15f)]); $gameSwitches['setValue'](_0x34342b, _0x441280['hasLastVoice']()); }), _0x1303f3['registerCommand']('ShowConsloeProxy', [], () => { const _0x21b4ba = _0x157443, _0x1b2755 = _0x441280[_0x21b4ba(0x203)]()[_0x21b4ba(0x321)](); for (const _0xf75e3 of _0x1b2755) { console[_0x21b4ba(0x35f)](_0xf75e3); } }); const _0x41bd3e = _0x157443(0x1d7), _0x22876e = ConfigManager[_0x157443(0x19e)]; ConfigManager[_0x157443(0x19e)] = function () { const _0x2e1e5f = _0x157443, _0x35c5eb = _0x22876e[_0x2e1e5f(0x1ef)](this), _0x25fa51 = _0x441280[_0x2e1e5f(0x1ec)](); return _0x35c5eb; }; const _0xf827ee = ConfigManager[_0x157443(0x1a8)]; ConfigManager[_0x157443(0x1a8)] = function (_0x11deb6) { const _0x33f21a = _0x157443; _0xf827ee[_0x33f21a(0x1ef)](this, _0x11deb6); const _0x4338a7 = _0x11deb6[_0x41bd3e]; _0x441280[_0x33f21a(0x150)](_0x4338a7); }; const _0x54f5ae = DataManager[_0x157443(0x183)]; DataManager[_0x157443(0x183)] = function () { const _0x33f67b = _0x157443, _0x483caa = _0x54f5ae[_0x33f67b(0x1ef)](this); return _0x441280['writeSaveContents'](_0x483caa), _0x483caa; }; const _0x3dacac = DataManager[_0x157443(0x2f7)]; DataManager['extractSaveContents'] = function (_0x76a3f5) { const _0x14e434 = _0x157443; _0x3dacac[_0x14e434(0x1ef)](this, _0x76a3f5), _0x441280[_0x14e434(0x16c)](_0x76a3f5); }; const _0x4f7035 = DataManager[_0x157443(0x213)]; DataManager[_0x157443(0x213)] = function () { const _0x47a9bb = _0x157443; _0x4f7035['call'](this), _0x441280[_0x47a9bb(0x271)](); }; const _0x20304d = DataManager['createGameObjects']; DataManager[_0x157443(0x316)] = function () { const _0x16c49a = _0x157443; _0x20304d['call'](this), _0x441280[_0x16c49a(0x183)](); }; const _0x2cfdc6 = Scene_Boot[_0x157443(0x249)][_0x157443(0x170)]; Scene_Boot[_0x157443(0x249)]['start'] = function () { const _0x285228 = _0x157443; _0x2cfdc6[_0x285228(0x1ef)](this), _0x987db7[_0x285228(0x353)](), _0x441280['onBoot'](); }; function _0x5624d0(_0x3ea960, _0x16c23f) { window[_0x16c23f] = _0x3ea960; } const _0x50b6ae = [LogList, LogItem_Choice, MultiLine_Message, LogSaveContents, MultiLine_Msg]; for (const _0x1ac5ba of _0x50b6ae) { _0x5624d0(_0x1ac5ba, _0x1ac5ba[_0x157443(0x21b)]); } return new LogManager_Export(_0x441280); }());
